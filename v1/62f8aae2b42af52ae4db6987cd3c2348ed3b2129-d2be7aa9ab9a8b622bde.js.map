{"version":3,"file":"62f8aae2b42af52ae4db6987cd3c2348ed3b2129-d2be7aa9ab9a8b622bde.js","mappings":"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","sources":["webpack://natura11y-inclusive-framework-documentation/./src/components/docs/CodeBlock.js","webpack://natura11y-inclusive-framework-documentation/./src/components/docs/FigureBlock.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/line-highlight/prism-line-highlight.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/line-numbers/prism-line-numbers.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/show-language/prism-show-language.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/toolbar/prism-toolbar.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/plugins/treeview/prism-treeview.js","webpack://natura11y-inclusive-framework-documentation/./src/prismjs/prism.js"],"sourcesContent":["import React, { useEffect }  from 'react';\n\nimport Prism from '../../prismjs/prism';\n\nimport '../../prismjs/plugins/normalize-whitespace/prism-normalize-whitespace';\nimport '../../prismjs/plugins/line-highlight/prism-line-highlight';\nimport '../../prismjs/plugins/line-numbers/prism-line-numbers';\nimport '../../prismjs/plugins/toolbar/prism-toolbar';\nimport '../../prismjs/plugins/show-language/prism-show-language';\nimport '../../prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\nimport '../../prismjs/plugins/treeview/prism-treeview';\n\nimport '../../prismjs/themes/prism-natura11y.css';\n\nconst CodeBlock = (props) => {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    }, []);\n    \n    const {\n        highlightedLines, \n        codeToolbar,\n        codeLanguage,\n        codeExample\n    } = props;\n\n    Prism.plugins.NormalizeWhitespace.setDefaults({\n        'remove-trailing': true,\n        'remove-indent': true,\n        'left-trim': true,\n        'right-trim': true,\n    });\n\n    const nw = Prism.plugins.NormalizeWhitespace;\n    const code = nw.normalize(codeExample);\n\n    return (\n        <pre \n            data-line={highlightedLines}\n            className={codeToolbar === false ? `hide-toolbar` : ``}>\n\n            <code className={`language-${codeLanguage}`}>\n                {code}\n            </code>\n        \n        </pre>\n    )\n}\n\nexport default CodeBlock;","import React from 'react';\n\nimport CodeBlock from './CodeBlock';\nimport { exampleStyles } from '../../mdxVars';\n\nconst Figure = (props) => {\n\n    const {\n        figureNumber,\n        figureWidth,\n        visualExample,\n        visualExampleClass,\n        codeToolbar,\n        codeLanguage,\n        codeExample,\n        highlightedLines,\n        hideFigCaption\n    } = props;\n\n    return (\n        <figure className={`container ${figureWidth} margin-y-4`} id={`figure_${figureNumber}`}>\n\n            {visualExample ? (\n                <div className=\"example\">\n                    <div className={(`padding-y-5 box-shadow-1 ${visualExampleClass && visualExampleClass}`)} style={exampleStyles}>\n                        <div className=\"container narrow\">\n                            {visualExample}\n                        </div>\n                    </div>\n                    <CodeBlock\n                        highlightedLines={highlightedLines} \n                        codeToolbar={codeToolbar}\n                        codeLanguage={codeLanguage}\n                        codeExample={codeExample}\n                    />\n                </div>\n            ) : (\n                <CodeBlock \n                    highlightedLines={highlightedLines} \n                    codeToolbar={codeToolbar}\n                    codeLanguage={codeLanguage}\n                    codeExample={codeExample}\n                />\n            )}\n\n            <figcaption className={hideFigCaption === true ? `screen-reader-only` : ``}>\n                Figure {figureNumber}\n            </figcaption>\n        </figure>\n    );\n}\n\nFigure.defaultProps = {\n    figureWidth: 'medium',\n    visualExample: null,\n    visualExampleClass: null,\n    codeToolbar: true,\n    codeExample: '<p>Code</p>',\n    codeLanguage: 'html',\n    hideFigCaption: false\n}\n\nexport default Figure;",";(function () {\n\tif (typeof Prism === \"undefined\" || typeof document === \"undefined\") {\n\t\treturn\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn(\"Copy to Clipboard plugin loaded before Toolbar plugin.\")\n\n\t\treturn\n\t}\n\n\t/**\n\t * When the given elements is clicked by the user, the given text will be copied to clipboard.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {CopyInfo} copyInfo\n\t *\n\t * @typedef CopyInfo\n\t * @property {() => string} getText\n\t * @property {() => void} success\n\t * @property {(reason: unknown) => void} error\n\t */\n\tfunction registerClipboard(element, copyInfo) {\n\t\telement.addEventListener(\"click\", function () {\n\t\t\tcopyTextToClipboard(copyInfo)\n\t\t})\n\t}\n\n\t// https://stackoverflow.com/a/30810322/7595472\n\n\t/** @param {CopyInfo} copyInfo */\n\tfunction fallbackCopyTextToClipboard(copyInfo) {\n\t\tvar textArea = document.createElement(\"textarea\")\n\t\t// Carl Edit\n\n\t\ttextArea.value = copyInfo.getText().trim()\n\n\t\t// Avoid scrolling to bottom\n\t\ttextArea.style.top = \"0\"\n\t\ttextArea.style.left = \"0\"\n\t\ttextArea.style.position = \"fixed\"\n\n\t\tdocument.body.appendChild(textArea)\n\t\ttextArea.focus()\n\t\ttextArea.select()\n\n\t\ttry {\n\t\t\tvar successful = document.execCommand(\"copy\")\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (successful) {\n\t\t\t\t\tcopyInfo.success()\n\t\t\t\t} else {\n\t\t\t\t\tcopyInfo.error()\n\t\t\t\t}\n\t\t\t}, 1)\n\t\t} catch (err) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcopyInfo.error(err)\n\t\t\t}, 1)\n\t\t}\n\n\t\tdocument.body.removeChild(textArea)\n\t}\n\t/** @param {CopyInfo} copyInfo */\n\tfunction copyTextToClipboard(copyInfo) {\n\t\tif (navigator.clipboard) {\n\t\t\t\n\t\t\t// Carl Edit\n\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(copyInfo.getText().trim())\n\t\t\t\t.then(copyInfo.success, function () {\n\t\t\t\t\t// try the fallback in case `writeText` didn't work\n\t\t\t\t\tfallbackCopyTextToClipboard(copyInfo)\n\t\t\t\t})\n\t\t} else {\n\t\t\tfallbackCopyTextToClipboard(copyInfo)\n\t\t}\n\t}\n\n\t/**\n\t * Selects the text content of the given element.\n\t *\n\t * @param {Element} element\n\t */\n\tfunction selectElementText(element) {\n\t\t// https://stackoverflow.com/a/20079910/7595472\n\t\twindow.getSelection().selectAllChildren(element)\n\t}\n\n\t/**\n\t * Traverses up the DOM tree to find data attributes that override the default plugin settings.\n\t *\n\t * @param {Element} startElement An element to start from.\n\t * @returns {Settings} The plugin settings.\n\t * @typedef {Record<\"copy\" | \"copy-error\" | \"copy-success\" | \"copy-timeout\", string | number>} Settings\n\t */\n\tfunction getSettings(startElement) {\n\t\t/** @type {Settings} */\n\t\tvar settings = {\n\t\t\tcopy: \"Copy\",\n\t\t\t\"copy-error\": \"Press Ctrl+C to copy\",\n\t\t\t\"copy-success\": \"Copied!\",\n\t\t\t\"copy-timeout\": 5000,\n\t\t}\n\n\t\tvar prefix = \"data-prismjs-\"\n\t\tfor (var key in settings) {\n\t\t\tvar attr = prefix + key\n\t\t\tvar element = startElement\n\t\t\twhile (element && !element.hasAttribute(attr)) {\n\t\t\t\telement = element.parentElement\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\tsettings[key] = element.getAttribute(attr)\n\t\t\t}\n\t\t}\n\t\treturn settings\n\t}\n\n\tPrism.plugins.toolbar.registerButton(\"copy-to-clipboard\", function (env) {\n\t\tvar element = env.element\n\n\t\tvar settings = getSettings(element)\n\n\t\tvar linkCopy = document.createElement(\"button\")\n\t\tlinkCopy.className = \"copy-to-clipboard-button\"\n\t\tlinkCopy.setAttribute(\"type\", \"button\")\n\t\tvar linkSpan = document.createElement(\"span\")\n\t\tlinkCopy.appendChild(linkSpan)\n\n\t\tsetState(\"copy\")\n\n\t\tregisterClipboard(linkCopy, {\n\t\t\tgetText: function () {\n\t\t\t\treturn element.textContent\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tsetState(\"copy-success\")\n\n\t\t\t\tresetText()\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\tsetState(\"copy-error\")\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tselectElementText(element)\n\t\t\t\t}, 1)\n\n\t\t\t\tresetText()\n\t\t\t},\n\t\t})\n\n\t\treturn linkCopy\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () {\n\t\t\t\tsetState(\"copy\")\n\t\t\t}, settings[\"copy-timeout\"])\n\t\t}\n\n\t\t/** @param {\"copy\" | \"copy-error\" | \"copy-success\"} state */\n\t\tfunction setState(state) {\n\t\t\tlinkSpan.textContent = settings[state]\n\t\t\tlinkCopy.setAttribute(\"data-copy-state\", state)\n\t\t}\n\t})\n})()\n",";(function () {\n\tif (\n\t\ttypeof Prism === \"undefined\" ||\n\t\ttypeof document === \"undefined\" ||\n\t\t!document.querySelector\n\t) {\n\t\treturn\n\t}\n\n\tvar LINE_NUMBERS_CLASS = \"line-numbers\"\n\tvar LINKABLE_LINE_NUMBERS_CLASS = \"linkable-line-numbers\"\n\n\t/**\n\t * @param {string} selector\n\t * @param {ParentNode} [container]\n\t * @returns {HTMLElement[]}\n\t */\n\tfunction $$(selector, container) {\n\t\treturn Array.prototype.slice.call(\n\t\t\t(container || document).querySelectorAll(selector)\n\t\t)\n\t}\n\n\t/**\n\t * Returns whether the given element has the given class.\n\t *\n\t * @param {Element} element\n\t * @param {string} className\n\t * @returns {boolean}\n\t */\n\tfunction hasClass(element, className) {\n\t\treturn element.classList.contains(className)\n\t}\n\n\t/**\n\t * Calls the given function.\n\t *\n\t * @param {() => any} func\n\t * @returns {void}\n\t */\n\tfunction callFunction(func) {\n\t\tfunc()\n\t}\n\n\t// Some browsers round the line-height, others don't.\n\t// We need to test for it to position the elements properly.\n\tvar isLineHeightRounded = (function () {\n\t\tvar res\n\t\treturn function () {\n\t\t\tif (typeof res === \"undefined\") {\n\t\t\t\tvar d = document.createElement(\"div\")\n\t\t\t\td.style.fontSize = \"13px\"\n\t\t\t\td.style.lineHeight = \"1.5\"\n\t\t\t\td.style.padding = \"0\"\n\t\t\t\td.style.border = \"0\"\n\t\t\t\td.innerHTML = \"&nbsp;<br />&nbsp;\"\n\t\t\t\tdocument.body.appendChild(d)\n\t\t\t\t// Browsers that round the line-height should have offsetHeight === 38\n\t\t\t\t// The others should have 39.\n\t\t\t\tres = d.offsetHeight === 38\n\t\t\t\tdocument.body.removeChild(d)\n\t\t\t}\n\t\t\treturn res\n\t\t}\n\t})()\n\n\t/**\n\t * Returns the top offset of the content box of the given parent and the content box of one of its children.\n\t *\n\t * @param {HTMLElement} parent\n\t * @param {HTMLElement} child\n\t */\n\tfunction getContentBoxTopOffset(parent, child) {\n\t\tvar parentStyle = getComputedStyle(parent)\n\t\tvar childStyle = getComputedStyle(child)\n\n\t\t/**\n\t\t * Returns the numeric value of the given pixel value.\n\t\t *\n\t\t * @param {string} px\n\t\t */\n\t\tfunction pxToNumber(px) {\n\t\t\treturn +px.substr(0, px.length - 2)\n\t\t}\n\n\t\treturn (\n\t\t\tchild.offsetTop +\n\t\t\tpxToNumber(childStyle.borderTopWidth) +\n\t\t\tpxToNumber(childStyle.paddingTop) -\n\t\t\tpxToNumber(parentStyle.paddingTop)\n\t\t)\n\t}\n\n\t/**\n\t * Returns whether the Line Highlight plugin is active for the given element.\n\t *\n\t * If this function returns `false`, do not call `highlightLines` for the given element.\n\t *\n\t * @param {HTMLElement | null | undefined} pre\n\t * @returns {boolean}\n\t */\n\tfunction isActiveFor(pre) {\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (pre.hasAttribute(\"data-line\")) {\n\t\t\treturn true\n\t\t}\n\n\t\tif (pre.id && Prism.util.isActive(pre, LINKABLE_LINE_NUMBERS_CLASS)) {\n\t\t\t// Technically, the line numbers plugin is also necessary but this plugin doesn't control the classes of\n\t\t\t// the line numbers plugin, so we can't assume that they are present.\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tvar scrollIntoView = true\n\n\tPrism.plugins.lineHighlight = {\n\t\t/**\n\t\t * Highlights the lines of the given pre.\n\t\t *\n\t\t * This function is split into a DOM measuring and mutate phase to improve performance.\n\t\t * The returned function mutates the DOM when called.\n\t\t *\n\t\t * @param {HTMLElement} pre\n\t\t * @param {string | null} [lines]\n\t\t * @param {string} [classes='']\n\t\t * @returns {() => void}\n\t\t */\n\t\thighlightLines: function highlightLines(pre, lines, classes) {\n\t\t\tlines =\n\t\t\t\ttypeof lines === \"string\"\n\t\t\t\t\t? lines\n\t\t\t\t\t: pre.getAttribute(\"data-line\") || \"\"\n\n\t\t\tvar ranges = lines.replace(/\\s+/g, \"\").split(\",\").filter(Boolean)\n\t\t\tvar offset = +pre.getAttribute(\"data-line-offset\") || 0\n\n\t\t\tvar parseMethod = isLineHeightRounded() ? parseInt : parseFloat\n\t\t\tvar lineHeight = parseMethod(getComputedStyle(pre).lineHeight)\n\t\t\tvar hasLineNumbers = Prism.util.isActive(pre, LINE_NUMBERS_CLASS)\n\t\t\tvar codeElement = pre.querySelector(\"code\")\n\t\t\tvar parentElement = hasLineNumbers ? pre : codeElement || pre\n\t\t\tvar mutateActions = /** @type {(() => void)[]} */ ([])\n\n\t\t\t/**\n\t\t\t * The top offset between the content box of the <code> element and the content box of the parent element of\n\t\t\t * the line highlight element (either `<pre>` or `<code>`).\n\t\t\t *\n\t\t\t * This offset might not be zero for some themes where the <code> element has a top margin. Some plugins\n\t\t\t * (or users) might also add element above the <code> element. Because the line highlight is aligned relative\n\t\t\t * to the <pre> element, we have to take this into account.\n\t\t\t *\n\t\t\t * This offset will be 0 if the parent element of the line highlight element is the `<code>` element.\n\t\t\t */\n\t\t\tvar codePreOffset =\n\t\t\t\t!codeElement || parentElement == codeElement\n\t\t\t\t\t? 0\n\t\t\t\t\t: getContentBoxTopOffset(pre, codeElement)\n\n\t\t\tranges.forEach(function (currentRange) {\n\t\t\t\tvar range = currentRange.split(\"-\")\n\n\t\t\t\tvar start = +range[0]\n\t\t\t\tvar end = +range[1] || start\n\n\t\t\t\t/** @type {HTMLElement} */\n\t\t\t\tvar line =\n\t\t\t\t\tpre.querySelector(\n\t\t\t\t\t\t'.line-highlight[data-range=\"' + currentRange + '\"]'\n\t\t\t\t\t) || document.createElement(\"div\")\n\n\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\tline.setAttribute(\"aria-hidden\", \"true\")\n\t\t\t\t\tline.setAttribute(\"data-range\", currentRange)\n\t\t\t\t\tline.className = (classes || \"\") + \" line-highlight\"\n\t\t\t\t})\n\n\t\t\t\t// if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\n\t\t\t\tif (hasLineNumbers && Prism.plugins.lineNumbers) {\n\t\t\t\t\tvar startNode = Prism.plugins.lineNumbers.getLine(\n\t\t\t\t\t\tpre,\n\t\t\t\t\t\tstart\n\t\t\t\t\t)\n\t\t\t\t\tvar endNode = Prism.plugins.lineNumbers.getLine(pre, end)\n\n\t\t\t\t\tif (startNode) {\n\t\t\t\t\t\tvar top = startNode.offsetTop + codePreOffset + \"px\"\n\t\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\t\tline.style.top = top\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (endNode) {\n\t\t\t\t\t\tvar height =\n\t\t\t\t\t\t\tendNode.offsetTop -\n\t\t\t\t\t\t\tstartNode.offsetTop +\n\t\t\t\t\t\t\tendNode.offsetHeight +\n\t\t\t\t\t\t\t\"px\"\n\t\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\t\tline.style.height = height\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tline.setAttribute(\"data-start\", String(start))\n\n\t\t\t\t\t\tif (end > start) {\n\t\t\t\t\t\t\tline.setAttribute(\"data-end\", String(end))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tline.style.top =\n\t\t\t\t\t\t\t(start - offset - 1) * lineHeight +\n\t\t\t\t\t\t\tcodePreOffset +\n\t\t\t\t\t\t\t\"px\"\n\n\t\t\t\t\t\tline.textContent = new Array(end - start + 2).join(\n\t\t\t\t\t\t\t\" \\n\"\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\tline.style.width = pre.scrollWidth + \"px\"\n\t\t\t\t})\n\n\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t// allow this to play nicely with the line-numbers plugin\n\t\t\t\t\t// need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\n\t\t\t\t\tparentElement.appendChild(line)\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tvar id = pre.id\n\t\t\tif (\n\t\t\t\thasLineNumbers &&\n\t\t\t\tPrism.util.isActive(pre, LINKABLE_LINE_NUMBERS_CLASS) &&\n\t\t\t\tid\n\t\t\t) {\n\t\t\t\t// This implements linkable line numbers. Linkable line numbers use Line Highlight to create a link to a\n\t\t\t\t// specific line. For this to work, the pre element has to:\n\t\t\t\t//  1) have line numbers,\n\t\t\t\t//  2) have the `linkable-line-numbers` class or an ascendant that has that class, and\n\t\t\t\t//  3) have an id.\n\n\t\t\t\tif (!hasClass(pre, LINKABLE_LINE_NUMBERS_CLASS)) {\n\t\t\t\t\t// add class to pre\n\t\t\t\t\tmutateActions.push(function () {\n\t\t\t\t\t\tpre.classList.add(LINKABLE_LINE_NUMBERS_CLASS)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tvar start = parseInt(pre.getAttribute(\"data-start\") || \"1\")\n\n\t\t\t\t// iterate all line number spans\n\t\t\t\t$$(\".line-numbers-rows > span\", pre).forEach(function (\n\t\t\t\t\tlineSpan,\n\t\t\t\t\ti\n\t\t\t\t) {\n\t\t\t\t\tvar lineNumber = i + start\n\t\t\t\t\tlineSpan.onclick = function () {\n\t\t\t\t\t\tvar hash = id + \".\" + lineNumber\n\n\t\t\t\t\t\t// this will prevent scrolling since the span is obviously in view\n\t\t\t\t\t\tscrollIntoView = false\n\t\t\t\t\t\tlocation.hash = hash\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tscrollIntoView = true\n\t\t\t\t\t\t}, 1)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tmutateActions.forEach(callFunction)\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction applyHash() {\n\t\tvar hash = location.hash.slice(1)\n\n\t\t// Remove pre-existing temporary lines\n\t\t$$(\".temporary.line-highlight\").forEach(function (line) {\n\n\t\t\t/* Carl Edit */\n\n\t\t\t// line.parentNode.removeChild(line);\n\n\t\t\tline.classList.remove(\"temporary\")\n\t\t})\n\n\t\tvar range = (hash.match(/\\.([\\d,-]+)$/) || [, \"\"])[1]\n\n\t\tif (!range || document.getElementById(hash)) {\n\t\t\treturn\n\t\t}\n\n\t\tvar id = hash.slice(0, hash.lastIndexOf(\".\"))\n\t\tvar pre = document.getElementById(id)\n\n\t\tif (!pre) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!pre.hasAttribute(\"data-line\")) {\n\t\t\tpre.setAttribute(\"data-line\", \"\")\n\t\t}\n\n\t\tvar mutateDom = Prism.plugins.lineHighlight.highlightLines(\n\t\t\tpre,\n\t\t\trange,\n\t\t\t\"temporary \"\n\t\t)\n\t\tmutateDom()\n\n\t\tif (scrollIntoView) {\n\t\t\tdocument.querySelector(\".temporary.line-highlight\").scrollIntoView()\n\t\t\tlistenerHandler()\n\t\t}\n\t}\n\n\tvar fakeTimer = 0 // Hack to limit the number of times applyHash() runs\n\n\tPrism.hooks.add(\"before-sanity-check\", function (env) {\n\t\tvar pre = env.element.parentElement\n\t\tif (!isActiveFor(pre)) {\n\t\t\treturn\n\t\t}\n\n\t\t/*\n\t\t * Cleanup for other plugins (e.g. autoloader).\n\t\t *\n\t\t * Sometimes <code> blocks are highlighted multiple times. It is necessary\n\t\t * to cleanup any left-over tags, because the whitespace inside of the <div>\n\t\t * tags change the content of the <code> tag.\n\t\t */\n\t\tvar num = 0\n\t\t$$(\".line-highlight\", pre).forEach(function (line) {\n\t\t\tnum += line.textContent.length\n\t\t\tline.parentNode.removeChild(line)\n\t\t})\n\t\t// Remove extra whitespace\n\t\tif (num && /^(?: \\n)+$/.test(env.code.slice(-num))) {\n\t\t\tenv.code = env.code.slice(0, -num)\n\t\t}\n\t})\n\n\tPrism.hooks.add(\"complete\", function completeHook(env) {\n\t\tvar pre = env.element.parentElement\n\t\tif (!isActiveFor(pre)) {\n\t\t\treturn\n\t\t}\n\n\t\tclearTimeout(fakeTimer)\n\n\t\tvar hasLineNumbers = Prism.plugins.lineNumbers\n\t\tvar isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers\n\n\t\tif (\n\t\t\thasClass(pre, LINE_NUMBERS_CLASS) &&\n\t\t\thasLineNumbers &&\n\t\t\t!isLineNumbersLoaded\n\t\t) {\n\t\t\tPrism.hooks.add(\"line-numbers\", completeHook)\n\t\t} else {\n\t\t\tvar mutateDom = Prism.plugins.lineHighlight.highlightLines(pre)\n\t\t\tmutateDom()\n\t\t\tfakeTimer = setTimeout(applyHash, 1)\n\t\t}\n\t})\n\n\twindow.addEventListener(\"hashchange\", applyHash)\n\n\t// Carl Edit\n\n\tlet lineAnchorLinkList = document.querySelectorAll(\"[data-line-anchor]\")\n\n\tlineAnchorLinkList.forEach(lineAnchorLink => {\n\t\tlineAnchorLink.addEventListener(\"click\", applyHash)\n\t})\n\n\t// Carl Edit\n\n\twindow.addEventListener(\"resize\", listenerHandler);\n\n\tfunction listenerHandler() {\n\t\tvar actions = $$(\"pre\")\n\t\t\t.filter(isActiveFor)\n\t\t\t.map(function (pre) {\n\t\t\t\t// return highlightLines(pre);\n\t\t\t\treturn Prism.plugins.lineHighlight.highlightLines(pre)\n\t\t\t})\n\t\tactions.forEach(callFunction)\n\t}\n})()\n",";(function () {\n\tif (typeof Prism === \"undefined\" || typeof document === \"undefined\") {\n\t\treturn\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t *\n\t * @type {string}\n\t */\n\tvar PLUGIN_NAME = \"line-numbers\"\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t *\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g\n\n\t/**\n\t * Global exports\n\t */\n\tvar config = (Prism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t *\n\t\t * @param {Element} element pre element\n\t\t * @param {number} number line number\n\t\t * @returns {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (\n\t\t\t\telement.tagName !== \"PRE\" ||\n\t\t\t\t!element.classList.contains(PLUGIN_NAME)\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector(\".line-numbers-rows\")\n\t\t\tif (!lineNumberRows) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tvar lineNumberStart =\n\t\t\t\tparseInt(element.getAttribute(\"data-start\"), 10) || 1\n\t\t\tvar lineNumberEnd =\n\t\t\t\tlineNumberStart + (lineNumberRows.children.length - 1)\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart\n\n\t\t\treturn lineNumberRows.children[lineIndex]\n\t\t},\n\n\t\t/**\n\t\t * Resizes the line numbers of the given element.\n\t\t *\n\t\t * This function will not add line numbers. It will only resize existing ones.\n\t\t *\n\t\t * @param {HTMLElement} element A `<pre>` element with line numbers.\n\t\t * @returns {void}\n\t\t */\n\t\tresize: function (element) {\n\t\t\tresizeElements([element])\n\t\t},\n\n\t\t/**\n\t\t * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n\t\t * the current viewport.\n\t\t *\n\t\t * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n\t\t *\n\t\t * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tassumeViewportIndependence: true,\n\t})\n\n\t/**\n\t * Resizes the given elements.\n\t *\n\t * @param {HTMLElement[]} elements\n\t */\n\tfunction resizeElements(elements) {\n\t\telements = elements.filter(function (e) {\n\t\t\tvar codeStyles = getStyles(e)\n\t\t\tvar whiteSpace = codeStyles[\"white-space\"]\n\t\t\treturn whiteSpace === \"pre-wrap\" || whiteSpace === \"pre-line\"\n\t\t})\n\n\t\tif (elements.length == 0) {\n\t\t\treturn\n\t\t}\n\n\t\tvar infos = elements\n\t\t\t.map(function (element) {\n\t\t\t\tvar codeElement = element.querySelector(\"code\")\n\t\t\t\tvar lineNumbersWrapper =\n\t\t\t\t\telement.querySelector(\".line-numbers-rows\")\n\t\t\t\tif (!codeElement || !lineNumbersWrapper) {\n\t\t\t\t\treturn undefined\n\t\t\t\t}\n\n\t\t\t\t/** @type {HTMLElement} */\n\t\t\t\tvar lineNumberSizer = element.querySelector(\n\t\t\t\t\t\".line-numbers-sizer\"\n\t\t\t\t)\n\t\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP)\n\n\t\t\t\tif (!lineNumberSizer) {\n\t\t\t\t\tlineNumberSizer = document.createElement(\"span\")\n\t\t\t\t\tlineNumberSizer.className = \"line-numbers-sizer\"\n\n\t\t\t\t\tcodeElement.appendChild(lineNumberSizer)\n\t\t\t\t}\n\n\t\t\t\tlineNumberSizer.innerHTML = \"0\"\n\t\t\t\tlineNumberSizer.style.display = \"block\"\n\n\t\t\t\tvar oneLinerHeight =\n\t\t\t\t\tlineNumberSizer.getBoundingClientRect().height\n\t\t\t\tlineNumberSizer.innerHTML = \"\"\n\n\t\t\t\treturn {\n\t\t\t\t\telement: element,\n\t\t\t\t\tlines: codeLines,\n\t\t\t\t\tlineHeights: [],\n\t\t\t\t\toneLinerHeight: oneLinerHeight,\n\t\t\t\t\tsizer: lineNumberSizer,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.filter(Boolean)\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer\n\t\t\tvar lines = info.lines\n\t\t\tvar lineHeights = info.lineHeights\n\t\t\tvar oneLinerHeight = info.oneLinerHeight\n\n\t\t\tlineHeights[lines.length - 1] = undefined\n\t\t\tlines.forEach(function (line, index) {\n\t\t\t\tif (line && line.length > 1) {\n\t\t\t\t\tvar e = lineNumberSizer.appendChild(\n\t\t\t\t\t\tdocument.createElement(\"span\")\n\t\t\t\t\t)\n\t\t\t\t\te.style.display = \"block\"\n\t\t\t\t\te.textContent = line\n\t\t\t\t} else {\n\t\t\t\t\tlineHeights[index] = oneLinerHeight\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer\n\t\t\tvar lineHeights = info.lineHeights\n\n\t\t\tvar childIndex = 0\n\t\t\tfor (var i = 0; i < lineHeights.length; i++) {\n\t\t\t\tif (lineHeights[i] === undefined) {\n\t\t\t\t\tlineHeights[i] =\n\t\t\t\t\t\tlineNumberSizer.children[\n\t\t\t\t\t\t\tchildIndex++\n\t\t\t\t\t\t].getBoundingClientRect().height\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer\n\t\t\tvar wrapper = info.element.querySelector(\".line-numbers-rows\")\n\n\t\t\tlineNumberSizer.style.display = \"none\"\n\t\t\tlineNumberSizer.innerHTML = \"\"\n\n\t\t\tinfo.lineHeights.forEach(function (height, lineNumber) {\n\t\t\t\twrapper.children[lineNumber].style.height = height + \"px\"\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Returns style declarations for the element\n\t *\n\t * @param {Element} element\n\t */\n\tfunction getStyles(element) {\n\t\tif (!element) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn window.getComputedStyle\n\t\t\t? getComputedStyle(element)\n\t\t\t: element.currentStyle || null\n\t}\n\n\tvar lastWidth = undefined\n\twindow.addEventListener(\"resize\", function () {\n\t\tif (\n\t\t\tconfig.assumeViewportIndependence &&\n\t\t\tlastWidth === window.innerWidth\n\t\t) {\n\t\t\treturn\n\t\t}\n\t\tlastWidth = window.innerWidth\n\n\t\tresizeElements(\n\t\t\tArray.prototype.slice.call(\n\t\t\t\tdocument.querySelectorAll(\"pre.\" + PLUGIN_NAME)\n\t\t\t)\n\t\t)\n\t})\n\n\tPrism.hooks.add(\"complete\", function (env) {\n\t\tif (!env.code) {\n\t\t\treturn\n\t\t}\n\n\t\tvar code = /** @type {Element} */ (env.element)\n\t\tvar pre = /** @type {HTMLElement} */ (code.parentNode)\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector(\".line-numbers-rows\")) {\n\t\t\treturn\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!Prism.util.isActive(code, PLUGIN_NAME)) {\n\t\t\treturn\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.classList.remove(PLUGIN_NAME)\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tpre.classList.add(PLUGIN_NAME)\n\n\t\tvar match = env.code.match(NEW_LINE_EXP)\n\t\tvar linesNum = match ? match.length + 1 : 1\n\t\tvar lineNumbersWrapper\n\n\t\tvar lines = new Array(linesNum + 1).join(\"<span></span>\")\n\n\t\tlineNumbersWrapper = document.createElement(\"span\")\n\t\tlineNumbersWrapper.setAttribute(\"aria-hidden\", \"true\")\n\t\tlineNumbersWrapper.className = \"line-numbers-rows\"\n\t\tlineNumbersWrapper.innerHTML = lines\n\n\t\tif (pre.hasAttribute(\"data-start\")) {\n\t\t\tpre.style.counterReset =\n\t\t\t\t\"linenumber \" +\n\t\t\t\t(parseInt(pre.getAttribute(\"data-start\"), 10) - 1)\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper)\n\n\t\tresizeElements([pre])\n\n\t\tPrism.hooks.run(\"line-numbers\", env)\n\t})\n\n\tPrism.hooks.add(\"line-numbers\", function (env) {\n\t\tenv.plugins = env.plugins || {}\n\t\tenv.plugins.lineNumbers = true\n\t})\n})()\n",";(function () {\n\tif (typeof Prism === \"undefined\") {\n\t\treturn\n\t}\n\n\tvar assign =\n\t\tObject.assign ||\n\t\tfunction (obj1, obj2) {\n\t\t\tfor (var name in obj2) {\n\t\t\t\tif (obj2.hasOwnProperty(name)) {\n\t\t\t\t\tobj1[name] = obj2[name]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj1\n\t\t}\n\n\tfunction NormalizeWhitespace(defaults) {\n\t\tthis.defaults = assign({}, defaults)\n\t}\n\n\tfunction toCamelCase(value) {\n\t\treturn value.replace(/-(\\w)/g, function (match, firstChar) {\n\t\t\treturn firstChar.toUpperCase()\n\t\t})\n\t}\n\n\tfunction tabLen(str) {\n\t\tvar res = 0\n\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\tif (str.charCodeAt(i) == \"\\t\".charCodeAt(0)) {\n\t\t\t\tres += 3\n\t\t\t}\n\t\t}\n\t\treturn str.length + res\n\t}\n\n\tNormalizeWhitespace.prototype = {\n\t\tsetDefaults: function (defaults) {\n\t\t\tthis.defaults = assign(this.defaults, defaults)\n\t\t},\n\t\tnormalize: function (input, settings) {\n\t\t\tsettings = assign(this.defaults, settings)\n\n\t\t\tfor (var name in settings) {\n\t\t\t\tvar methodName = toCamelCase(name)\n\t\t\t\tif (\n\t\t\t\t\tname !== \"normalize\" &&\n\t\t\t\t\tmethodName !== \"setDefaults\" &&\n\t\t\t\t\tsettings[name] &&\n\t\t\t\t\tthis[methodName]\n\t\t\t\t) {\n\t\t\t\t\tinput = this[methodName].call(this, input, settings[name])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn input\n\t\t},\n\n\t\t/*\n\t\t * Normalization methods\n\t\t */\n\t\tleftTrim: function (input) {\n\t\t\treturn input.replace(/^\\s+/, \"\")\n\t\t},\n\t\trightTrim: function (input) {\n\t\t\treturn input.replace(/\\s+$/, \"\")\n\t\t},\n\t\ttabsToSpaces: function (input, spaces) {\n\t\t\tspaces = spaces | 0 || 4\n\t\t\treturn input.replace(/\\t/g, new Array(++spaces).join(\" \"))\n\t\t},\n\t\tspacesToTabs: function (input, spaces) {\n\t\t\tspaces = spaces | 0 || 4\n\t\t\treturn input.replace(RegExp(\" {\" + spaces + \"}\", \"g\"), \"\\t\")\n\t\t},\n\t\tremoveTrailing: function (input) {\n\t\t\treturn input.replace(/\\s*?$/gm, \"\")\n\t\t},\n\t\t// Support for deprecated plugin remove-initial-line-feed\n\t\tremoveInitialLineFeed: function (input) {\n\t\t\treturn input.replace(/^(?:\\r?\\n|\\r)/, \"\")\n\t\t},\n\t\tremoveIndent: function (input) {\n\t\t\tvar indents = input.match(/^[^\\S\\n\\r]*(?=\\S)/gm)\n\n\t\t\tif (!indents || !indents[0].length) {\n\t\t\t\treturn input\n\t\t\t}\n\n\t\t\tindents.sort(function (a, b) {\n\t\t\t\treturn a.length - b.length\n\t\t\t})\n\n\t\t\tif (!indents[0].length) {\n\t\t\t\treturn input\n\t\t\t}\n\n\t\t\treturn input.replace(RegExp(\"^\" + indents[0], \"gm\"), \"\")\n\t\t},\n\t\tindent: function (input, tabs) {\n\t\t\treturn input.replace(\n\t\t\t\t/^[^\\S\\n\\r]*(?=\\S)/gm,\n\t\t\t\tnew Array(++tabs).join(\"\\t\") + \"$&\"\n\t\t\t)\n\t\t},\n\t\tbreakLines: function (input, characters) {\n\t\t\tcharacters = characters === true ? 80 : characters | 0 || 80\n\n\t\t\tvar lines = input.split(\"\\n\")\n\t\t\tfor (var i = 0; i < lines.length; ++i) {\n\t\t\t\tif (tabLen(lines[i]) <= characters) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tvar line = lines[i].split(/(\\s+)/g)\n\t\t\t\tvar len = 0\n\n\t\t\t\tfor (var j = 0; j < line.length; ++j) {\n\t\t\t\t\tvar tl = tabLen(line[j])\n\t\t\t\t\tlen += tl\n\t\t\t\t\tif (len > characters) {\n\t\t\t\t\t\tline[j] = \"\\n\" + line[j]\n\t\t\t\t\t\tlen = tl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlines[i] = line.join(\"\")\n\t\t\t}\n\t\t\treturn lines.join(\"\\n\")\n\t\t},\n\t}\n\n\t// Support node modules\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = NormalizeWhitespace\n\t}\n\n\tPrism.plugins.NormalizeWhitespace = new NormalizeWhitespace({\n\t\t\"remove-trailing\": true,\n\t\t\"remove-indent\": true,\n\t\t\"left-trim\": true,\n\t\t\"right-trim\": true,\n\t\t/*'break-lines': 80,\n\t\t'indent': 2,\n\t\t'remove-initial-line-feed': false,\n\t\t'tabs-to-spaces': 4,\n\t\t'spaces-to-tabs': 4*/\n\t})\n\n\tPrism.hooks.add(\"before-sanity-check\", function (env) {\n\t\tvar Normalizer = Prism.plugins.NormalizeWhitespace\n\n\t\t// Check settings\n\t\tif (\n\t\t\tenv.settings &&\n\t\t\tenv.settings[\"whitespace-normalization\"] === false\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// Check classes\n\t\tif (\n\t\t\t!Prism.util.isActive(env.element, \"whitespace-normalization\", true)\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// Simple mode if there is no env.element\n\t\tif ((!env.element || !env.element.parentNode) && env.code) {\n\t\t\tenv.code = Normalizer.normalize(env.code, env.settings)\n\t\t\treturn\n\t\t}\n\n\t\t// Normal mode\n\t\tvar pre = env.element.parentNode\n\t\tif (!env.code || !pre || pre.nodeName.toLowerCase() !== \"pre\") {\n\t\t\treturn\n\t\t}\n\n\t\tvar children = pre.childNodes\n\t\tvar before = \"\"\n\t\tvar after = \"\"\n\t\tvar codeFound = false\n\n\t\t// Move surrounding whitespace from the <pre> tag into the <code> tag\n\t\tfor (var i = 0; i < children.length; ++i) {\n\t\t\tvar node = children[i]\n\n\t\t\tif (node == env.element) {\n\t\t\t\tcodeFound = true\n\t\t\t} else if (node.nodeName === \"#text\") {\n\t\t\t\tif (codeFound) {\n\t\t\t\t\tafter += node.nodeValue\n\t\t\t\t} else {\n\t\t\t\t\tbefore += node.nodeValue\n\t\t\t\t}\n\n\t\t\t\tpre.removeChild(node)\n\t\t\t\t--i\n\t\t\t}\n\t\t}\n\n\t\tif (!env.element.children.length || !Prism.plugins.KeepMarkup) {\n\t\t\tenv.code = before + env.code + after\n\t\t\tenv.code = Normalizer.normalize(env.code, env.settings)\n\t\t} else {\n\t\t\t// Preserve markup for keep-markup plugin\n\t\t\tvar html = before + env.element.innerHTML + after\n\t\t\tenv.element.innerHTML = Normalizer.normalize(html, env.settings)\n\t\t\tenv.code = env.element.textContent\n\t\t}\n\t})\n})()\n",";(function () {\n\tif (typeof Prism === \"undefined\" || typeof document === \"undefined\") {\n\t\treturn\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn(\"Show Languages plugin loaded before Toolbar plugin.\")\n\n\t\treturn\n\t}\n\n\t/* eslint-disable */\n\n\t// The languages map is built automatically with gulp\n\tvar Languages = /*languages_placeholder[*/ {\n\t\tnone: \"Plain text\",\n\t\tplain: \"Plain text\",\n\t\tplaintext: \"Plain text\",\n\t\ttext: \"Plain text\",\n\t\ttxt: \"Plain text\",\n\t\thtml: \"HTML\",\n\t\txml: \"XML\",\n\t\tsvg: \"SVG\",\n\t\tmathml: \"MathML\",\n\t\tssml: \"SSML\",\n\t\trss: \"RSS\",\n\t\tcss: \"CSS\",\n\t\tclike: \"C-like\",\n\t\tjs: \"JavaScript\",\n\t\tabap: \"ABAP\",\n\t\tabnf: \"ABNF\",\n\t\tal: \"AL\",\n\t\tantlr4: \"ANTLR4\",\n\t\tg4: \"ANTLR4\",\n\t\tapacheconf: \"Apache Configuration\",\n\t\tapl: \"APL\",\n\t\taql: \"AQL\",\n\t\tino: \"Arduino\",\n\t\tarff: \"ARFF\",\n\t\tasciidoc: \"AsciiDoc\",\n\t\tadoc: \"AsciiDoc\",\n\t\taspnet: \"ASP.NET (C#)\",\n\t\tasm6502: \"6502 Assembly\",\n\t\tasmatmel: \"Atmel AVR Assembly\",\n\t\tautohotkey: \"AutoHotkey\",\n\t\tautoit: \"AutoIt\",\n\t\tavisynth: \"AviSynth\",\n\t\tavs: \"AviSynth\",\n\t\t\"avro-idl\": \"Avro IDL\",\n\t\tavdl: \"Avro IDL\",\n\t\tbasic: \"BASIC\",\n\t\tbbcode: \"BBcode\",\n\t\tbnf: \"BNF\",\n\t\trbnf: \"RBNF\",\n\t\tbsl: \"BSL (1C:Enterprise)\",\n\t\toscript: \"OneScript\",\n\t\tcsharp: \"C#\",\n\t\tcs: \"C#\",\n\t\tdotnet: \"C#\",\n\t\tcpp: \"C++\",\n\t\tcfscript: \"CFScript\",\n\t\tcfc: \"CFScript\",\n\t\tcil: \"CIL\",\n\t\tcmake: \"CMake\",\n\t\tcobol: \"COBOL\",\n\t\tcoffee: \"CoffeeScript\",\n\t\tconc: \"Concurnas\",\n\t\tcsp: \"Content-Security-Policy\",\n\t\t\"css-extras\": \"CSS Extras\",\n\t\tcsv: \"CSV\",\n\t\tdataweave: \"DataWeave\",\n\t\tdax: \"DAX\",\n\t\tdjango: \"Django/Jinja2\",\n\t\tjinja2: \"Django/Jinja2\",\n\t\t\"dns-zone-file\": \"DNS zone file\",\n\t\t\"dns-zone\": \"DNS zone file\",\n\t\tdockerfile: \"Docker\",\n\t\tdot: \"DOT (Graphviz)\",\n\t\tgv: \"DOT (Graphviz)\",\n\t\tebnf: \"EBNF\",\n\t\teditorconfig: \"EditorConfig\",\n\t\tejs: \"EJS\",\n\t\tetlua: \"Embedded Lua templating\",\n\t\terb: \"ERB\",\n\t\t\"excel-formula\": \"Excel Formula\",\n\t\txlsx: \"Excel Formula\",\n\t\txls: \"Excel Formula\",\n\t\tfsharp: \"F#\",\n\t\t\"firestore-security-rules\": \"Firestore security rules\",\n\t\tftl: \"FreeMarker Template Language\",\n\t\tgml: \"GameMaker Language\",\n\t\tgamemakerlanguage: \"GameMaker Language\",\n\t\tgap: \"GAP (CAS)\",\n\t\tgcode: \"G-code\",\n\t\tgdscript: \"GDScript\",\n\t\tgedcom: \"GEDCOM\",\n\t\tglsl: \"GLSL\",\n\t\tgn: \"GN\",\n\t\tgni: \"GN\",\n\t\tgraphql: \"GraphQL\",\n\t\thbs: \"Handlebars\",\n\t\ths: \"Haskell\",\n\t\thcl: \"HCL\",\n\t\thlsl: \"HLSL\",\n\t\thttp: \"HTTP\",\n\t\thpkp: \"HTTP Public-Key-Pins\",\n\t\thsts: \"HTTP Strict-Transport-Security\",\n\t\tichigojam: \"IchigoJam\",\n\t\t\"icu-message-format\": \"ICU Message Format\",\n\t\tidr: \"Idris\",\n\t\tignore: \".ignore\",\n\t\tgitignore: \".gitignore\",\n\t\thgignore: \".hgignore\",\n\t\tnpmignore: \".npmignore\",\n\t\tinform7: \"Inform 7\",\n\t\tjavadoc: \"JavaDoc\",\n\t\tjavadoclike: \"JavaDoc-like\",\n\t\tjavastacktrace: \"Java stack trace\",\n\t\tjq: \"JQ\",\n\t\tjsdoc: \"JSDoc\",\n\t\t\"js-extras\": \"JS Extras\",\n\t\tjson: \"JSON\",\n\t\twebmanifest: \"Web App Manifest\",\n\t\tjson5: \"JSON5\",\n\t\tjsonp: \"JSONP\",\n\t\tjsstacktrace: \"JS stack trace\",\n\t\t\"js-templates\": \"JS Templates\",\n\t\tkeepalived: \"Keepalived Configure\",\n\t\tkts: \"Kotlin Script\",\n\t\tkt: \"Kotlin\",\n\t\tkumir: \"KuMir (КуМир)\",\n\t\tkum: \"KuMir (КуМир)\",\n\t\tlatex: \"LaTeX\",\n\t\ttex: \"TeX\",\n\t\tcontext: \"ConTeXt\",\n\t\tlilypond: \"LilyPond\",\n\t\tly: \"LilyPond\",\n\t\temacs: \"Lisp\",\n\t\telisp: \"Lisp\",\n\t\t\"emacs-lisp\": \"Lisp\",\n\t\tllvm: \"LLVM IR\",\n\t\tlog: \"Log file\",\n\t\tlolcode: \"LOLCODE\",\n\t\tmagma: \"Magma (CAS)\",\n\t\tmd: \"Markdown\",\n\t\t\"markup-templating\": \"Markup templating\",\n\t\tmatlab: \"MATLAB\",\n\t\tmaxscript: \"MAXScript\",\n\t\tmel: \"MEL\",\n\t\tmongodb: \"MongoDB\",\n\t\tmoon: \"MoonScript\",\n\t\tn1ql: \"N1QL\",\n\t\tn4js: \"N4JS\",\n\t\tn4jsd: \"N4JS\",\n\t\t\"nand2tetris-hdl\": \"Nand To Tetris HDL\",\n\t\tnaniscript: \"Naninovel Script\",\n\t\tnani: \"Naninovel Script\",\n\t\tnasm: \"NASM\",\n\t\tneon: \"NEON\",\n\t\tnginx: \"nginx\",\n\t\tnsis: \"NSIS\",\n\t\tobjectivec: \"Objective-C\",\n\t\tobjc: \"Objective-C\",\n\t\tocaml: \"OCaml\",\n\t\topencl: \"OpenCL\",\n\t\topenqasm: \"OpenQasm\",\n\t\tqasm: \"OpenQasm\",\n\t\tparigp: \"PARI/GP\",\n\t\tobjectpascal: \"Object Pascal\",\n\t\tpsl: \"PATROL Scripting Language\",\n\t\tpcaxis: \"PC-Axis\",\n\t\tpx: \"PC-Axis\",\n\t\tpeoplecode: \"PeopleCode\",\n\t\tpcode: \"PeopleCode\",\n\t\tphp: \"PHP\",\n\t\tphpdoc: \"PHPDoc\",\n\t\t\"php-extras\": \"PHP Extras\",\n\t\tplsql: \"PL/SQL\",\n\t\tpowerquery: \"PowerQuery\",\n\t\tpq: \"PowerQuery\",\n\t\tmscript: \"PowerQuery\",\n\t\tpowershell: \"PowerShell\",\n\t\tpromql: \"PromQL\",\n\t\tproperties: \".properties\",\n\t\tprotobuf: \"Protocol Buffers\",\n\t\tpurebasic: \"PureBasic\",\n\t\tpbfasm: \"PureBasic\",\n\t\tpurs: \"PureScript\",\n\t\tpy: \"Python\",\n\t\tqsharp: \"Q#\",\n\t\tqs: \"Q#\",\n\t\tq: \"Q (kdb+ database)\",\n\t\tqml: \"QML\",\n\t\trkt: \"Racket\",\n\t\tcshtml: \"Razor C#\",\n\t\trazor: \"Razor C#\",\n\t\tjsx: \"React JSX\",\n\t\ttsx: \"React TSX\",\n\t\trenpy: \"Ren'py\",\n\t\trpy: \"Ren'py\",\n\t\trest: \"reST (reStructuredText)\",\n\t\trobotframework: \"Robot Framework\",\n\t\trobot: \"Robot Framework\",\n\t\trb: \"Ruby\",\n\t\tsas: \"SAS\",\n\t\tsass: \"Sass (Sass)\",\n\t\tscss: \"Sass (Scss)\",\n\t\t\"shell-session\": \"Shell session\",\n\t\t\"sh-session\": \"Shell session\",\n\t\tshellsession: \"Shell session\",\n\t\tsml: \"SML\",\n\t\tsmlnj: \"SML/NJ\",\n\t\tsolidity: \"Solidity (Ethereum)\",\n\t\tsol: \"Solidity (Ethereum)\",\n\t\t\"solution-file\": \"Solution file\",\n\t\tsln: \"Solution file\",\n\t\tsoy: \"Soy (Closure Template)\",\n\t\tsparql: \"SPARQL\",\n\t\trq: \"SPARQL\",\n\t\t\"splunk-spl\": \"Splunk SPL\",\n\t\tsqf: \"SQF: Status Quo Function (Arma 3)\",\n\t\tsql: \"SQL\",\n\t\tiecst: \"Structured Text (IEC 61131-3)\",\n\t\tsystemd: \"Systemd configuration file\",\n\t\t\"t4-templating\": \"T4 templating\",\n\t\t\"t4-cs\": \"T4 Text Templates (C#)\",\n\t\tt4: \"T4 Text Templates (C#)\",\n\t\t\"t4-vb\": \"T4 Text Templates (VB)\",\n\t\ttap: \"TAP\",\n\t\ttt2: \"Template Toolkit 2\",\n\t\ttoml: \"TOML\",\n\t\ttrickle: \"trickle\",\n\t\ttroy: \"troy\",\n\t\ttrig: \"TriG\",\n\t\tts: \"TypeScript\",\n\t\ttsconfig: \"TSConfig\",\n\t\tuscript: \"UnrealScript\",\n\t\tuc: \"UnrealScript\",\n\t\turi: \"URI\",\n\t\turl: \"URL\",\n\t\tvbnet: \"VB.Net\",\n\t\tvhdl: \"VHDL\",\n\t\tvim: \"vim\",\n\t\t\"visual-basic\": \"Visual Basic\",\n\t\tvba: \"VBA\",\n\t\tvb: \"Visual Basic\",\n\t\twasm: \"WebAssembly\",\n\t\t\"web-idl\": \"Web IDL\",\n\t\twebidl: \"Web IDL\",\n\t\twiki: \"Wiki markup\",\n\t\twolfram: \"Wolfram language\",\n\t\tnb: \"Mathematica Notebook\",\n\t\twl: \"Wolfram language\",\n\t\txeoracube: \"XeoraCube\",\n\t\t\"xml-doc\": \"XML doc (.net)\",\n\t\txojo: \"Xojo (REALbasic)\",\n\t\txquery: \"XQuery\",\n\t\tyaml: \"YAML\",\n\t\tyml: \"YAML\",\n\t\tyang: \"YANG\",\n\t} /*]*/\n\n\t/* eslint-enable */\n\n\tPrism.plugins.toolbar.registerButton(\"show-language\", function (env) {\n\t\tvar pre = env.element.parentNode\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn\n\t\t}\n\n\t\t/**\n\t\t * Tries to guess the name of a language given its id.\n\t\t *\n\t\t * @param {string} id The language id.\n\t\t * @returns {string}\n\t\t */\n\t\tfunction guessTitle(id) {\n\t\t\tif (!id) {\n\t\t\t\treturn id\n\t\t\t}\n\t\t\treturn (id.substring(0, 1).toUpperCase() + id.substring(1)).replace(\n\t\t\t\t/s(?=cript)/,\n\t\t\t\t\"S\"\n\t\t\t)\n\t\t}\n\n\t\tvar language =\n\t\t\tpre.getAttribute(\"data-language\") ||\n\t\t\tLanguages[env.language] ||\n\t\t\tguessTitle(env.language)\n\n\t\tif (!language) {\n\t\t\treturn\n\t\t}\n\t\tvar element = document.createElement(\"span\")\n\t\telement.textContent = language\n\n\t\treturn element\n\t})\n})()\n",";(function () {\n\tif (typeof Prism === \"undefined\" || typeof document === \"undefined\") {\n\t\treturn\n\t}\n\n\tvar callbacks = []\n\tvar map = {}\n\tvar noop = function () {}\n\n\tPrism.plugins.toolbar = {}\n\n\t/**\n\t * @typedef ButtonOptions\n\t * @property {string} text The text displayed.\n\t * @property {string} [url] The URL of the link which will be created.\n\t * @property {Function} [onClick] The event listener for the `click` event of the created button.\n\t * @property {string} [className] The class attribute to include with element.\n\t */\n\n\t/**\n\t * Register a button callback with the toolbar.\n\t *\n\t * @param {string} key\n\t * @param {ButtonOptions|Function} opts\n\t */\n\tvar registerButton = (Prism.plugins.toolbar.registerButton = function (\n\t\tkey,\n\t\topts\n\t) {\n\t\tvar callback\n\n\t\tif (typeof opts === \"function\") {\n\t\t\tcallback = opts\n\t\t} else {\n\t\t\tcallback = function (env) {\n\t\t\t\tvar element\n\n\t\t\t\tif (typeof opts.onClick === \"function\") {\n\t\t\t\t\telement = document.createElement(\"button\")\n\t\t\t\t\telement.type = \"button\"\n\t\t\t\t\telement.addEventListener(\"click\", function () {\n\t\t\t\t\t\topts.onClick.call(this, env)\n\t\t\t\t\t})\n\t\t\t\t} else if (typeof opts.url === \"string\") {\n\t\t\t\t\telement = document.createElement(\"a\")\n\t\t\t\t\telement.href = opts.url\n\t\t\t\t} else {\n\t\t\t\t\telement = document.createElement(\"span\")\n\t\t\t\t}\n\n\t\t\t\tif (opts.className) {\n\t\t\t\t\telement.classList.add(opts.className)\n\t\t\t\t}\n\n\t\t\t\telement.textContent = opts.text\n\n\t\t\t\treturn element\n\t\t\t}\n\t\t}\n\n\t\tif (key in map) {\n\t\t\tconsole.warn(\n\t\t\t\t'There is a button with the key \"' +\n\t\t\t\t\tkey +\n\t\t\t\t\t'\" registered already.'\n\t\t\t)\n\t\t\treturn\n\t\t}\n\n\t\tcallbacks.push((map[key] = callback))\n\t})\n\n\t/**\n\t * Returns the callback order of the given element.\n\t *\n\t * @param {HTMLElement} element\n\t * @returns {string[] | undefined}\n\t */\n\tfunction getOrder(element) {\n\t\twhile (element) {\n\t\t\tvar order = element.getAttribute(\"data-toolbar-order\")\n\t\t\tif (order != null) {\n\t\t\t\torder = order.trim()\n\t\t\t\tif (order.length) {\n\t\t\t\t\treturn order.split(/\\s*,\\s*/g)\n\t\t\t\t} else {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentElement\n\t\t}\n\t}\n\n\t/**\n\t * Post-highlight Prism hook callback.\n\t *\n\t * @param env\n\t */\n\tvar hook = (Prism.plugins.toolbar.hook = function (env) {\n\t\t// Check if inline or actual code block (credit to line-numbers plugin)\n\t\tvar pre = env.element.parentNode\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn\n\t\t}\n\n\t\t// Autoloader rehighlights, so only do this once.\n\t\tif (pre.parentNode.classList.contains(\"code-toolbar\")) {\n\t\t\treturn\n\t\t}\n\n\t\t// Create wrapper for <pre> to prevent scrolling toolbar with content\n\t\tvar wrapper = document.createElement(\"div\")\n\t\twrapper.classList.add(\"code-toolbar\")\n\t\tpre.parentNode.insertBefore(wrapper, pre)\n\t\twrapper.appendChild(pre)\n\n\t\t// Setup the toolbar\n\t\tvar toolbar = document.createElement(\"div\")\n\t\ttoolbar.classList.add(\"toolbar\")\n\n\t\t// order callbacks\n\t\tvar elementCallbacks = callbacks\n\t\tvar order = getOrder(env.element)\n\t\tif (order) {\n\t\t\telementCallbacks = order.map(function (key) {\n\t\t\t\treturn map[key] || noop\n\t\t\t})\n\t\t}\n\n\t\telementCallbacks.forEach(function (callback) {\n\t\t\tvar element = callback(env)\n\n\t\t\tif (!element) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar item = document.createElement(\"div\")\n\t\t\titem.classList.add(\"toolbar-item\")\n\n\t\t\titem.appendChild(element)\n\t\t\ttoolbar.appendChild(item)\n\t\t})\n\n\t\t// Add our toolbar to the currently created wrapper of <pre> tag\n\t\twrapper.appendChild(toolbar)\n\t})\n\n\tregisterButton(\"label\", function (env) {\n\t\tvar pre = env.element.parentNode\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!pre.hasAttribute(\"data-label\")) {\n\t\t\treturn\n\t\t}\n\n\t\tvar element\n\t\tvar template\n\t\tvar text = pre.getAttribute(\"data-label\")\n\t\ttry {\n\t\t\t// Any normal text will blow up this selector.\n\t\t\ttemplate = document.querySelector(\"template#\" + text)\n\t\t} catch (e) {\n\t\t\t/* noop */\n\t\t}\n\n\t\tif (template) {\n\t\t\telement = template.content\n\t\t} else {\n\t\t\tif (pre.hasAttribute(\"data-url\")) {\n\t\t\t\telement = document.createElement(\"a\")\n\t\t\t\telement.href = pre.getAttribute(\"data-url\")\n\t\t\t} else {\n\t\t\t\telement = document.createElement(\"span\")\n\t\t\t}\n\n\t\t\telement.textContent = text\n\t\t}\n\n\t\treturn element\n\t})\n\n\t/**\n\t * Register the toolbar with Prism.\n\t */\n\tPrism.hooks.add(\"complete\", hook)\n})()\n",";(function () {\n\tif (typeof Prism === \"undefined\") {\n\t\treturn\n\t}\n\n\tPrism.languages.treeview = {\n\t\t\"treeview-part\": {\n\t\t\tpattern: /^.+/m,\n\t\t\tinside: {\n\t\t\t\t\"entry-line\": [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\|-- |├── /,\n\t\t\t\t\t\talias: \"line-h\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\| {3}|│ {3}/,\n\t\t\t\t\t\talias: \"line-v\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /`-- |└── /,\n\t\t\t\t\t\talias: \"line-v-last\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: / {4}/,\n\t\t\t\t\t\talias: \"line-v-gap\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t\"entry-name\": {\n\t\t\t\t\tpattern: /.*\\S.*/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// symlink\n\t\t\t\t\t\toperator: / -> /,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\n\tPrism.hooks.add(\"wrap\", function (env) {\n\t\tif (env.language === \"treeview\" && env.type === \"entry-name\") {\n\t\t\tvar classes = env.classes\n\n\t\t\tvar folderPattern = /(^|[^\\\\])\\/\\s*$/\n\t\t\tif (folderPattern.test(env.content)) {\n\t\t\t\t// folder\n\n\t\t\t\t// remove trailing /\n\t\t\t\tenv.content = env.content.replace(folderPattern, \"$1\")\n\t\t\t\tclasses.push(\"dir\")\n\t\t\t} else {\n\t\t\t\t// file\n\n\t\t\t\t// remove trailing file marker\n\t\t\t\tenv.content = env.content.replace(/(^|[^\\\\])[=*|]\\s*$/, \"$1\")\n\n\t\t\t\tvar parts = env.content\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(/\\s+/g, \"\")\n\t\t\t\t\t.split(\".\")\n\t\t\t\twhile (parts.length > 1) {\n\t\t\t\t\tparts.shift()\n\t\t\t\t\t// Ex. 'foo.min.js' would become '<span class=\"token keyword ext-min-js ext-js\">foo.min.js</span>'\n\t\t\t\t\tclasses.push(\"ext-\" + parts.join(\"-\"))\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (env.content[0] === \".\") {\n\t\t\t\tclasses.push(\"dotfile\")\n\t\t\t}\n\t\t}\n\t})\n})()\n","/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self =\n\ttypeof window !== \"undefined\"\n\t\t? window // if in browser\n\t\t: typeof WorkerGlobalScope !== \"undefined\" &&\n\t\t  self instanceof WorkerGlobalScope\n\t\t? self // if in worker\n\t\t: {} // if in node js\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i\n\tvar uniqueId = 0\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {}\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler:\n\t\t\t_self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(\n\t\t\t\t\t\ttokens.type,\n\t\t\t\t\t\tencode(tokens.content),\n\t\t\t\t\t\ttokens.alias\n\t\t\t\t\t)\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode)\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens\n\t\t\t\t\t\t.replace(/&/g, \"&amp;\")\n\t\t\t\t\t\t.replace(/</g, \"&lt;\")\n\t\t\t\t\t\t.replace(/\\u00a0/g, \" \")\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj[\"__id\"]) {\n\t\t\t\t\tObject.defineProperty(obj, \"__id\", { value: ++uniqueId })\n\t\t\t\t}\n\t\t\t\treturn obj[\"__id\"]\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {}\n\n\t\t\t\tvar clone\n\t\t\t\tvar id\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase \"Object\":\n\t\t\t\t\t\tid = _.util.objId(o)\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({})\n\t\t\t\t\t\tvisited[id] = clone\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone)\n\n\t\t\t\t\tcase \"Array\":\n\t\t\t\t\t\tid = _.util.objId(o)\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = []\n\t\t\t\t\t\tvisited[id] = clone\n\n\t\t\t\t\t\t;/** @type {Array} */ (/** @type {any} */ (o)).forEach(\n\t\t\t\t\t\t\tfunction (v, i) {\n\t\t\t\t\t\t\t\tclone[i] = deepClone(v, visited)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone)\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className)\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase()\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement\n\t\t\t\t}\n\t\t\t\treturn \"none\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(\n\t\t\t\t\tRegExp(lang, \"gi\"),\n\t\t\t\t\t\"\"\n\t\t\t\t)\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add(\"language-\" + language)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === \"undefined\") {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t\"currentScript\" in document &&\n\t\t\t\t\t1 < 2 /* hack to trip TS' flow analysis */\n\t\t\t\t) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript)\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(\n\t\t\t\t\t\terr.stack\n\t\t\t\t\t) || [])[1]\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName(\"script\")\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = \"no-\" + className\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id])\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key]\n\t\t\t\t}\n\n\t\t\t\treturn lang\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages)\n\t\t\t\tvar grammar = root[inside]\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {}\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside]\n\t\t\t\troot[inside] = ret\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\treturn ret\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {}\n\n\t\t\t\tvar objId = _.util.objId\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i)\n\n\t\t\t\t\t\tvar property = o[i]\n\t\t\t\t\t\tvar propertyType = _.util.type(property)\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tpropertyType === \"Object\" &&\n\t\t\t\t\t\t\t!visited[objId(property)]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true\n\t\t\t\t\t\t\tDFS(property, callback, null, visited)\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tpropertyType === \"Array\" &&\n\t\t\t\t\t\t\t!visited[objId(property)]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true\n\t\t\t\t\t\t\tDFS(property, callback, i, visited)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback)\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector:\n\t\t\t\t\t'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code',\n\t\t\t}\n\n\t\t\t_.hooks.run(\"before-highlightall\", env)\n\n\t\t\tenv.elements = Array.prototype.slice.apply(\n\t\t\t\tenv.container.querySelectorAll(env.selector)\n\t\t\t)\n\n\t\t\t_.hooks.run(\"before-all-elements-highlight\", env)\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]); ) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback)\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element)\n\t\t\tvar grammar = _.languages[language]\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language)\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement\n\t\t\tif (parent && parent.nodeName.toLowerCase() === \"pre\") {\n\t\t\t\t_.util.setLanguage(parent, language)\n\t\t\t}\n\n\t\t\tvar code = element.textContent\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code,\n\t\t\t}\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode\n\n\t\t\t\t_.hooks.run(\"before-insert\", env)\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode\n\n\t\t\t\t_.hooks.run(\"after-highlight\", env)\n\t\t\t\t_.hooks.run(\"complete\", env)\n\t\t\t\tcallback && callback.call(env.element)\n\t\t\t}\n\n\t\t\t_.hooks.run(\"before-sanity-check\", env)\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement\n\t\t\tif (\n\t\t\t\tparent &&\n\t\t\t\tparent.nodeName.toLowerCase() === \"pre\" &&\n\t\t\t\t!parent.hasAttribute(\"tabindex\")\n\t\t\t) {\n\t\t\t\tparent.setAttribute(\"tabindex\", \"0\")\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run(\"complete\", env)\n\t\t\t\tcallback && callback.call(env.element)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t_.hooks.run(\"before-highlight\", env)\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename)\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data)\n\t\t\t\t}\n\n\t\t\t\tworker.postMessage(\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\t\tcode: env.code,\n\t\t\t\t\t\timmediateClose: true,\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(\n\t\t\t\t\t_.highlight(env.code, env.grammar, env.language)\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language,\n\t\t\t}\n\t\t\t_.hooks.run(\"before-tokenize\", env)\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar)\n\t\t\t_.hooks.run(\"after-tokenize\", env)\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language)\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token]\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList()\n\t\t\taddAfter(tokenList, tokenList.head, text)\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0)\n\n\t\t\treturn toArray(tokenList)\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all\n\n\t\t\t\thooks[name] = hooks[name] || []\n\n\t\t\t\thooks[name].push(callback)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name]\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]); ) {\n\t\t\t\t\tcallback(env)\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\n\t\tToken: Token,\n\t}\n\t_self.Prism = _\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || \"\").length | 0\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == \"string\") {\n\t\t\treturn o\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = \"\"\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language)\n\t\t\t})\n\t\t\treturn s\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: \"span\",\n\t\t\tclasses: [\"token\", o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language,\n\t\t}\n\n\t\tvar aliases = o.alias\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases)\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases)\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run(\"wrap\", env)\n\n\t\tvar attributes = \"\"\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes +=\n\t\t\t\t\" \" +\n\t\t\t\tname +\n\t\t\t\t'=\"' +\n\t\t\t\t(env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") +\n\t\t\t\t'\"'\n\t\t}\n\n\t\treturn (\n\t\t\t\"<\" +\n\t\t\tenv.tag +\n\t\t\t' class=\"' +\n\t\t\tenv.classes.join(\" \") +\n\t\t\t'\"' +\n\t\t\tattributes +\n\t\t\t\">\" +\n\t\t\tenv.content +\n\t\t\t\"</\" +\n\t\t\tenv.tag +\n\t\t\t\">\"\n\t\t)\n\t}\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos\n\t\tvar match = pattern.exec(text)\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length\n\t\t\tmatch.index += lookbehindLength\n\t\t\tmatch[0] = match[0].slice(lookbehindLength)\n\t\t}\n\t\treturn match\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(\n\t\ttext,\n\t\ttokenList,\n\t\tgrammar,\n\t\tstartNode,\n\t\tstartPos,\n\t\trematch\n\t) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token]\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns]\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + \",\" + j) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j]\n\t\t\t\tvar inside = patternObj.inside\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind\n\t\t\t\tvar greedy = !!patternObj.greedy\n\t\t\t\tvar alias = patternObj.alias\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.match(/[imsuy]*$/)[0]\n\t\t\t\t\tpatternObj.pattern = RegExp(\n\t\t\t\t\t\tpatternObj.pattern.source,\n\t\t\t\t\t\tflags + \"g\"\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj\n\n\t\t\t\tfor (\n\t\t\t\t\t// iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length,\n\t\t\t\t\t\tcurrentNode = currentNode.next\n\t\t\t\t) {\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1 // this is the to parameter of removeBetween\n\t\t\t\t\tvar match\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind)\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index\n\t\t\t\t\t\tvar to = match.index + match[0].length\n\t\t\t\t\t\tvar p = pos\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next\n\t\t\t\t\t\t\tp += currentNode.value.length\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length\n\t\t\t\t\t\tpos = p\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail &&\n\t\t\t\t\t\t\t(p < to || typeof k.value === \"string\");\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++\n\t\t\t\t\t\t\tp += k.value.length\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p)\n\t\t\t\t\t\tmatch.index -= pos\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind)\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index\n\t\t\t\t\tvar matchStr = match[0]\n\t\t\t\t\tvar before = str.slice(0, from)\n\t\t\t\t\tvar after = str.slice(from + matchStr.length)\n\n\t\t\t\t\tvar reach = pos + str.length\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before)\n\t\t\t\t\t\tpos += before.length\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount)\n\n\t\t\t\t\tvar wrapped = new Token(\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\tinside ? _.tokenize(matchStr, inside) : matchStr,\n\t\t\t\t\t\talias,\n\t\t\t\t\t\tmatchStr\n\t\t\t\t\t)\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped)\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + \",\" + j,\n\t\t\t\t\t\t\treach: reach,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatchGrammar(\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\ttokenList,\n\t\t\t\t\t\t\tgrammar,\n\t\t\t\t\t\t\tcurrentNode.prev,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t\tnestedRematch\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null }\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null }\n\t\thead.next = tail\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail\n\t\tthis.length = 0\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next\n\n\t\tvar newNode = { value: value, prev: node, next: next }\n\t\tnode.next = newNode\n\t\tnext.prev = newNode\n\t\tlist.length++\n\n\t\treturn newNode\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next\n\t\t}\n\t\tnode.next = next\n\t\tnext.prev = node\n\t\tlist.length -= i\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = []\n\t\tvar node = list.head.next\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value)\n\t\t\tnode = node.next\n\t\t}\n\t\treturn array\n\t}\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener(\n\t\t\t\t\"message\",\n\t\t\t\tfunction (evt) {\n\t\t\t\t\tvar message = JSON.parse(evt.data)\n\t\t\t\t\tvar lang = message.language\n\t\t\t\t\tvar code = message.code\n\t\t\t\t\tvar immediateClose = message.immediateClose\n\n\t\t\t\t\t_self.postMessage(\n\t\t\t\t\t\t_.highlight(code, _.languages[lang], lang)\n\t\t\t\t\t)\n\t\t\t\t\tif (immediateClose) {\n\t\t\t\t\t\t_self.close()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t)\n\t\t}\n\n\t\treturn _\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript()\n\n\tif (script) {\n\t\t_.filename = script.src\n\n\t\tif (script.hasAttribute(\"data-manual\")) {\n\t\t\t_.manual = true\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll()\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState\n\t\tif (\n\t\t\treadyState === \"loading\" ||\n\t\t\t(readyState === \"interactive\" && script && script.defer)\n\t\t) {\n\t\t\tdocument.addEventListener(\n\t\t\t\t\"DOMContentLoaded\",\n\t\t\t\thighlightAutomaticallyCallback\n\t\t\t)\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback)\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _\n})(_self)\n\nif (typeof module !== \"undefined\" && module.exports) {\n\tmodule.exports = Prism\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== \"undefined\") {\n\tglobal.Prism = Prism\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\tcomment: {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true,\n\t},\n\tprolog: {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true,\n\t},\n\tdoctype: {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern:\n\t\t\t/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t\"internal-subset\": {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null, // see below\n\t\t\t},\n\t\t\tstring: {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true,\n\t\t\t},\n\t\t\tpunctuation: /^<!|>$|[[\\]]/,\n\t\t\t\"doctype-tag\": /^DOCTYPE/i,\n\t\t\tname: /[^\\s<>'\"]+/,\n\t\t},\n\t},\n\tcdata: {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true,\n\t},\n\ttag: {\n\t\tpattern:\n\t\t\t/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\ttag: {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^<\\/?/,\n\t\t\t\t\tnamespace: /^[^\\s>\\/:]+:/,\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"special-attr\": [],\n\t\t\t\"attr-value\": {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: \"attr-equals\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\tpunctuation: /\\/?>/,\n\t\t\t\"attr-name\": {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\tnamespace: /^[^\\s>\\/:]+:/,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tentity: [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: \"named-entity\",\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i,\n\t],\n}\n\nPrism.languages.markup[\"tag\"].inside[\"attr-value\"].inside[\"entity\"] =\n\tPrism.languages.markup[\"entity\"]\nPrism.languages.markup[\"doctype\"].inside[\"internal-subset\"].inside =\n\tPrism.languages.markup\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add(\"wrap\", function (env) {\n\tif (env.type === \"entity\") {\n\t\tenv.attributes[\"title\"] = env.content.replace(/&amp;/, \"&\")\n\t}\n})\n\nObject.defineProperty(Prism.languages.markup.tag, \"addInlined\", {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {}\n\t\tincludedCdataInside[\"language-\" + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang],\n\t\t}\n\t\tincludedCdataInside[\"cdata\"] = /^<!\\[CDATA\\[|\\]\\]>$/i\n\n\t\tvar inside = {\n\t\t\t\"included-cdata\": {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside,\n\t\t\t},\n\t\t}\n\t\tinside[\"language-\" + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang],\n\t\t}\n\n\t\tvar def = {}\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n\t\t\t\t\t/__/g,\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn tagName\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\t\"i\"\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside,\n\t\t}\n\n\t\tPrism.languages.insertBefore(\"markup\", \"cdata\", def)\n\t},\n})\nObject.defineProperty(Prism.languages.markup.tag, \"addAttribute\", {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside[\"special-attr\"].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source +\n\t\t\t\t\t\"(?:\" +\n\t\t\t\t\tattrName +\n\t\t\t\t\t\")\" +\n\t\t\t\t\t/\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t\"i\"\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t\"attr-name\": /^[^\\s=]+/,\n\t\t\t\t\"attr-value\": {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, \"language-\" + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpunctuation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: \"attr-equals\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/,\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t},\n})\n\nPrism.languages.html = Prism.languages.markup\nPrism.languages.mathml = Prism.languages.markup\nPrism.languages.svg = Prism.languages.markup\n\nPrism.languages.xml = Prism.languages.extend(\"markup\", {})\nPrism.languages.ssml = Prism.languages.xml\nPrism.languages.atom = Prism.languages.xml\nPrism.languages.rss = Prism.languages.xml\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n;(function (Prism) {\n\tvar string =\n\t\t/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n\n\tPrism.languages.css = {\n\t\tcomment: /\\/\\*[\\s\\S]*?\\*\\//,\n\t\tatrule: {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\trule: /^@[\\w-]+/,\n\t\t\t\t\"selector-function-argument\": {\n\t\t\t\t\tpattern:\n\t\t\t\t\t\t/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: \"selector\",\n\t\t\t\t},\n\t\t\t\tkeyword: {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t},\n\t\t\t\t// See rest below\n\t\t\t},\n\t\t},\n\t\turl: {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp(\n\t\t\t\t\"\\\\burl\\\\((?:\" +\n\t\t\t\t\tstring.source +\n\t\t\t\t\t\"|\" +\n\t\t\t\t\t/(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n\t\t\t\t\t\")\\\\)\",\n\t\t\t\t\"i\"\n\t\t\t),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\tfunction: /^url/i,\n\t\t\t\tpunctuation: /^\\(|\\)$/,\n\t\t\t\tstring: {\n\t\t\t\t\tpattern: RegExp(\"^\" + string.source + \"$\"),\n\t\t\t\t\talias: \"url\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tselector: {\n\t\t\tpattern: RegExp(\n\t\t\t\t\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\" +\n\t\t\t\t\tstring.source +\n\t\t\t\t\t\")*(?=\\\\s*\\\\{)\"\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t},\n\t\tstring: {\n\t\t\tpattern: string,\n\t\t\tgreedy: true,\n\t\t},\n\t\tproperty: {\n\t\t\tpattern:\n\t\t\t\t/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true,\n\t\t},\n\t\timportant: /!important\\b/i,\n\t\tfunction: {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true,\n\t\t},\n\t\tpunctuation: /[(){};:,]/,\n\t}\n\n\tPrism.languages.css[\"atrule\"].inside.rest = Prism.languages.css\n\n\tvar markup = Prism.languages.markup\n\tif (markup) {\n\t\tmarkup.tag.addInlined(\"style\", \"css\")\n\t\tmarkup.tag.addAttribute(\"style\", \"css\")\n\t}\n})(Prism)\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\tcomment: [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t},\n\t],\n\tstring: {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true,\n\t},\n\t\"class-name\": {\n\t\tpattern:\n\t\t\t/(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/,\n\t\t},\n\t},\n\tkeyword:\n\t\t/\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\tboolean: /\\b(?:false|true)\\b/,\n\tfunction: /\\b\\w+(?=\\()/,\n\tnumber: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\toperator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\tpunctuation: /[{}[\\];(),.:]/,\n}\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend(\"clike\", {\n\t\"class-name\": [\n\t\tPrism.languages.clike[\"class-name\"],\n\t\t{\n\t\t\tpattern:\n\t\t\t\t/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true,\n\t\t},\n\t],\n\tkeyword: [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t{\n\t\t\tpattern:\n\t\t\t\t/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true,\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\tfunction:\n\t\t/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\tnumber: {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t\t\"(?:\" +\n\t\t\t\t// constant\n\t\t\t\t(/NaN|Infinity/.source +\n\t\t\t\t\t\"|\" +\n\t\t\t\t\t// binary integer\n\t\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t\t\"|\" +\n\t\t\t\t\t// octal integer\n\t\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t\t\"|\" +\n\t\t\t\t\t// hexadecimal integer\n\t\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t\t\"|\" +\n\t\t\t\t\t// decimal bigint\n\t\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t\t\"|\" +\n\t\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n\t\t\t\t\t\t.source) +\n\t\t\t\t\")\" +\n\t\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true,\n\t},\n\toperator:\n\t\t/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n})\n\nPrism.languages.javascript[\"class-name\"][0].pattern =\n\t/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n\nPrism.languages.insertBefore(\"javascript\", \"keyword\", {\n\tregex: {\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\tpattern:\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t\"regex-source\": {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: \"language-regex\",\n\t\t\t\tinside: Prism.languages.regex,\n\t\t\t},\n\t\t\t\"regex-delimiter\": /^\\/|\\/$/,\n\t\t\t\"regex-flags\": /^[a-z]+$/,\n\t\t},\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t\"function-variable\": {\n\t\tpattern:\n\t\t\t/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: \"function\",\n\t},\n\tparameter: [\n\t\t{\n\t\t\tpattern:\n\t\t\t\t/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t},\n\t\t{\n\t\t\tpattern:\n\t\t\t\t/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t},\n\t\t{\n\t\t\tpattern:\n\t\t\t\t/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t},\n\t\t{\n\t\t\tpattern:\n\t\t\t\t/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t},\n\t],\n\tconstant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/,\n})\n\nPrism.languages.insertBefore(\"javascript\", \"string\", {\n\thashbang: {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: \"comment\",\n\t},\n\t\"template-string\": {\n\t\tpattern:\n\t\t\t/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t\"template-punctuation\": {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: \"string\",\n\t\t\t},\n\t\t\tinterpolation: {\n\t\t\t\tpattern:\n\t\t\t\t\t/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t\"interpolation-punctuation\": {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: \"punctuation\",\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript,\n\t\t\t\t},\n\t\t\t},\n\t\t\tstring: /[\\s\\S]+/,\n\t\t},\n\t},\n\t\"string-property\": {\n\t\tpattern:\n\t\t\t/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: \"property\",\n\t},\n})\n\nPrism.languages.insertBefore(\"javascript\", \"operator\", {\n\t\"literal-property\": {\n\t\tpattern:\n\t\t\t/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: \"property\",\n\t},\n})\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined(\"script\", \"javascript\")\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n\t\t\t.source,\n\t\t\"javascript\"\n\t)\n}\n\nPrism.languages.js = Prism.languages.javascript\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n;(function () {\n\tif (typeof Prism === \"undefined\" || typeof document === \"undefined\") {\n\t\treturn\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches =\n\t\t\tElement.prototype.msMatchesSelector ||\n\t\t\tElement.prototype.webkitMatchesSelector\n\t}\n\n\tvar LOADING_MESSAGE = \"Loading…\"\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn \"✖ Error \" + status + \" while fetching file: \" + message\n\t}\n\tvar FAILURE_EMPTY_MESSAGE = \"✖ Error: File does not exist or is empty\"\n\n\tvar EXTENSIONS = {\n\t\tjs: \"javascript\",\n\t\tpy: \"python\",\n\t\trb: \"ruby\",\n\t\tps1: \"powershell\",\n\t\tpsm1: \"powershell\",\n\t\tsh: \"bash\",\n\t\tbat: \"batch\",\n\t\th: \"c\",\n\t\ttex: \"latex\",\n\t}\n\n\tvar STATUS_ATTR = \"data-src-status\"\n\tvar STATUS_LOADING = \"loading\"\n\tvar STATUS_LOADED = \"loaded\"\n\tvar STATUS_FAILED = \"failed\"\n\n\tvar SELECTOR =\n\t\t\"pre[data-src]:not([\" +\n\t\tSTATUS_ATTR +\n\t\t'=\"' +\n\t\tSTATUS_LOADED +\n\t\t'\"])' +\n\t\t\":not([\" +\n\t\tSTATUS_ATTR +\n\t\t'=\"' +\n\t\tSTATUS_LOADING +\n\t\t'\"])'\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest()\n\t\txhr.open(\"GET\", src, true)\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText)\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText))\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\txhr.send(null)\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || \"\")\n\t\tif (m) {\n\t\t\tvar start = Number(m[1])\n\t\t\tvar comma = m[2]\n\t\t\tvar end = m[3]\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start]\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined]\n\t\t\t}\n\t\t\treturn [start, Number(end)]\n\t\t}\n\t\treturn undefined\n\t}\n\n\tPrism.hooks.add(\"before-highlightall\", function (env) {\n\t\tenv.selector += \", \" + SELECTOR\n\t})\n\n\tPrism.hooks.add(\"before-sanity-check\", function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element)\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = \"\" // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING) // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement(\"CODE\"))\n\t\t\tcode.textContent = LOADING_MESSAGE\n\n\t\t\tvar src = pre.getAttribute(\"data-src\")\n\n\t\t\tvar language = env.language\n\t\t\tif (language === \"none\") {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, \"none\"])[1]\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language)\n\t\t\tPrism.util.setLanguage(pre, language)\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language)\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED)\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute(\"data-range\"))\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g)\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0]\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1]\n\n\t\t\t\t\t\tif (start < 0) {\n\t\t\t\t\t\t\tstart += lines.length\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length))\n\t\t\t\t\t\tif (end < 0) {\n\t\t\t\t\t\t\tend += lines.length\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length))\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join(\"\\n\")\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute(\"data-start\")) {\n\t\t\t\t\t\t\tpre.setAttribute(\"data-start\", String(start + 1))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text\n\t\t\t\t\tPrism.highlightElement(code)\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED)\n\n\t\t\t\t\tcode.textContent = error\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t})\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR)\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]); ) {\n\t\t\t\tPrism.highlightElement(element)\n\t\t\t}\n\t\t},\n\t}\n\n\tvar logged = false\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn(\n\t\t\t\t\"Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.\"\n\t\t\t)\n\t\t\tlogged = true\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments)\n\t}\n})()\n"],"names":["props","useEffect","Prism","highlightedLines","codeToolbar","codeLanguage","codeExample","code","normalize","className","Figure","figureNumber","figureWidth","visualExample","visualExampleClass","hideFigCaption","id","style","exampleStyles","defaultProps","registerClipboard","element","copyInfo","addEventListener","navigator","clipboard","writeText","getText","trim","then","success","fallbackCopyTextToClipboard","copyTextToClipboard","textArea","document","createElement","value","top","left","position","body","appendChild","focus","select","successful","execCommand","setTimeout","error","err","removeChild","plugins","toolbar","registerButton","env","settings","startElement","copy","key","attr","hasAttribute","parentElement","getAttribute","getSettings","linkCopy","setAttribute","linkSpan","setState","textContent","resetText","window","getSelection","selectAllChildren","selectElementText","state","console","warn","querySelector","res","LINE_NUMBERS_CLASS","LINKABLE_LINE_NUMBERS_CLASS","isLineHeightRounded","d","fontSize","lineHeight","padding","border","innerHTML","offsetHeight","scrollIntoView","lineHighlight","highlightLines","pre","lines","classes","ranges","replace","split","filter","Boolean","offset","parseInt","parseFloat","getComputedStyle","hasLineNumbers","util","isActive","codeElement","mutateActions","codePreOffset","parent","child","parentStyle","childStyle","pxToNumber","px","substr","length","offsetTop","borderTopWidth","paddingTop","getContentBoxTopOffset","forEach","currentRange","range","start","end","line","push","lineNumbers","startNode","getLine","endNode","height","String","Array","join","width","scrollWidth","hasClass","classList","add","$$","lineSpan","i","lineNumber","onclick","hash","location","callFunction","fakeTimer","hooks","isActiveFor","num","parentNode","test","slice","completeHook","clearTimeout","isLineNumbersLoaded","mutateDom","applyHash","querySelectorAll","lineAnchorLink","listenerHandler","selector","container","prototype","call","contains","func","nodeName","remove","match","getElementById","lastIndexOf","map","PLUGIN_NAME","NEW_LINE_EXP","config","number","tagName","lineNumberRows","lineNumberStart","lineNumberEnd","children","lineIndex","resize","resizeElements","assumeViewportIndependence","lastWidth","undefined","innerWidth","lineNumbersWrapper","linesNum","counterReset","run","elements","e","whiteSpace","currentStyle","getStyles","infos","lineNumberSizer","codeLines","display","oneLinerHeight","getBoundingClientRect","lineHeights","sizer","info","index","childIndex","wrapper","assign","Object","obj1","obj2","name","hasOwnProperty","NormalizeWhitespace","setDefaults","defaults","this","input","methodName","firstChar","toUpperCase","leftTrim","rightTrim","tabsToSpaces","spaces","spacesToTabs","RegExp","removeTrailing","removeInitialLineFeed","removeIndent","indents","sort","a","b","indent","tabs","breakLines","characters","tabLen","len","j","tl","module","exports","Normalizer","toLowerCase","childNodes","before","after","codeFound","node","nodeValue","KeepMarkup","html","str","charCodeAt","Languages","none","plain","plaintext","text","txt","xml","svg","mathml","ssml","rss","css","clike","js","abap","abnf","al","antlr4","g4","apacheconf","apl","aql","ino","arff","asciidoc","adoc","aspnet","asm6502","asmatmel","autohotkey","autoit","avisynth","avs","avdl","basic","bbcode","bnf","rbnf","bsl","oscript","csharp","cs","dotnet","cpp","cfscript","cfc","cil","cmake","cobol","coffee","conc","csp","csv","dataweave","dax","django","jinja2","dockerfile","dot","gv","ebnf","editorconfig","ejs","etlua","erb","xlsx","xls","fsharp","ftl","gml","gamemakerlanguage","gap","gcode","gdscript","gedcom","glsl","gn","gni","graphql","hbs","hs","hcl","hlsl","http","hpkp","hsts","ichigojam","idr","ignore","gitignore","hgignore","npmignore","inform7","javadoc","javadoclike","javastacktrace","jq","jsdoc","json","webmanifest","json5","jsonp","jsstacktrace","keepalived","kts","kt","kumir","kum","latex","tex","context","lilypond","ly","emacs","elisp","llvm","log","lolcode","magma","md","matlab","maxscript","mel","mongodb","moon","n1ql","n4js","n4jsd","naniscript","nani","nasm","neon","nginx","nsis","objectivec","objc","ocaml","opencl","openqasm","qasm","parigp","objectpascal","psl","pcaxis","peoplecode","pcode","php","phpdoc","plsql","powerquery","pq","mscript","powershell","promql","properties","protobuf","purebasic","pbfasm","purs","py","qsharp","qs","q","qml","rkt","cshtml","razor","jsx","tsx","renpy","rpy","rest","robotframework","robot","rb","sas","sass","scss","shellsession","sml","smlnj","solidity","sol","sln","soy","sparql","rq","sqf","sql","iecst","systemd","t4","tap","tt2","toml","trickle","troy","trig","ts","tsconfig","uscript","uc","uri","url","vbnet","vhdl","vim","vba","vb","wasm","webidl","wiki","wolfram","nb","wl","xeoracube","xojo","xquery","yaml","yml","yang","language","substring","callbacks","noop","opts","callback","onClick","type","href","hook","insertBefore","elementCallbacks","order","getOrder","item","template","content","languages","treeview","pattern","inside","alias","operator","folderPattern","parts","shift","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","encode","tokens","Token","isArray","o","toString","objId","obj","defineProperty","clone","deepClone","visited","v","getLanguage","m","exec","setLanguage","currentScript","Error","src","stack","scripts","getElementsByTagName","defaultActivation","no","extend","redef","insert","root","grammar","ret","token","newToken","old","DFS","property","propertyType","highlightAll","async","highlightAllUnder","apply","highlightElement","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","next","tail","toArray","all","matchedStr","matchPattern","pos","lookbehind","lastIndex","lookbehindLength","startPos","rematch","patterns","cause","patternObj","greedy","global","flags","source","currentNode","reach","removeCount","from","to","p","k","matchStr","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","attributes","aliases","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","WorkerGlobalScope","self","markup","comment","prolog","doctype","string","punctuation","cdata","namespace","entity","includedCdataInside","def","attrName","atom","atrule","rule","keyword","function","important","addInlined","addAttribute","boolean","javascript","regex","parameter","constant","hashbang","interpolation","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","ps1","psm1","sh","bat","h","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","extension","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","loadFile","Number","comma","parseRange","Math","max","min","fileHighlight","logged","arguments"],"sourceRoot":""}