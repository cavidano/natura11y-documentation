{"version":3,"file":"component---src-pages-icons-index-js-455895a9b3d26a2b9f4c.js","mappings":"iNA+CA,IAzCmB,WAEf,OACI,gBAAC,EAAAA,SAAD,KAEI,uBAAKC,UAAU,iDACX,uEAGA,0IAKJ,uBAAKA,UAAU,oBACX,sBAAIA,UAAU,iCACV,0BACI,gBAAC,KAAD,CACIC,GAAG,wBACHC,GAAG,UACHC,YAAaC,EAAAA,GACbC,KAAK,OAJT,UAQJ,0BACI,gBAAC,KAAD,CACIJ,GAAG,wBACHC,GAAG,gBACHC,YAAaC,EAAAA,GACbC,KAAK,OAJT,e,4FCoGxB,UAzHc,SAAC,GAAc,IAEnBC,EAFkB,EAAXC,KAESC,sBAAsBC,MAE5C,GAAoCC,EAAAA,EAAAA,WAAS,GAAtCC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAA5CG,EAAP,KAAsBC,EAAtB,KACA,GAA4CJ,EAAAA,EAAAA,UAASJ,GAA9CS,EAAP,KAAuBC,EAAvB,KAyBMC,EAAWF,EAAeG,KAAI,SAACC,EAAMC,GAEvC,IAAIC,EAAOF,EAAKnB,UACLmB,EAAKG,KACNH,EAAKI,IAEf,OACI,gBAAC,KAAD,CAAMrB,GAAE,UAAYmB,EAAQG,IAAQL,EAAL,IAAaC,GAExC,uBAAKpB,UAAU,gHACX,uBAAKA,UAAU,QACX,uBAAKyB,KAAI,IAAMJ,MAIvB,qBAAGrB,UAAU,2BACRqB,OAOjB,OACI,gBAAC,EAAAtB,SAAD,KAEI,gBAAC,IAAD,CAAK2B,MAAM,UAEX,gBAAC,IAAD,MAEA,gBAAC,IAAD,MAEA,uBAAK1B,UAAU,oBAEX,uBAAKA,UAAU,yBAEX,uBAAKA,UAAU,qBAEX,wBAAMA,UAAU,4BACZ,wBAAMA,UAAU,gCAChB,yBACI2B,KAAK,OACLN,KAAK,wBACLpB,GAAG,wBACH2B,YAAY,eACZC,SApEN,SAACC,GAEnBhB,EAAiBgB,EAAMC,OAAOC,OAE9B,IAAMC,EAAyBH,EAAMC,OAAOC,MAAME,cAE9CC,EAAgB7B,EAAS8B,QAAO,SAAAjB,GAChC,OACIA,EAAKnB,UAAUkC,cAAcG,SAASJ,IACtCd,EAAKG,KAAKgB,WAAWD,SAASJ,MAKlCjB,EADuB,KAA3BiB,EACsBE,EACA7B,GAEtB6B,EAAcI,OAAS,EACnB3B,GAAc,GACdA,GAAc,SAyDV,uBAAKZ,UAAU,gCAEdW,EAEG,uBAAKX,UAAU,+CAA+CC,GAAG,qBAE5DgB,GAML,uBAAKjB,UAAU,sCAEX,qBAAGA,UAAU,eAAe,cAAY,QAAxC,OACQ,2BADR,QAEmB,2BAFnB,QAGiB,2BAHjB,MAIO,wBAAMwC,MAAO,CAAC,QAAW,MAAzB,MAGP,qBAAGxC,UAAU,MAAb,uBAAuCa,EAAvC,QAUZ,gBAAC,IAAD","sources":["webpack://natura11y-inclusive-framework-documentation/./src/components/supplementary/IconLeader.js","webpack://natura11y-inclusive-framework-documentation/./src/pages/icons/index.js"],"sourcesContent":["import React, { Fragment } from 'react';\n\nimport { Link } from 'gatsby';\n\nimport { activeLinkStyles } from '../../mdxVars.js';\n\nconst IconLeader = () => {\n\n    return (\n        <Fragment>\n\n            <div className=\"container narrow margin-y-4 text-align-center\">\n                <h2>\n                    Introducing Natura11y's own icon library.\n                </h2>\n                <p>\n                    Natura11y icons are free to use for commercial or personal use. Include them as a web font or an SVG sprite.\n                </p>\n            </div>\n\n            <div className=\"container medium\">    \n                <ul className=\"tabs-nav tabs-nav--horizontal\">\n                    <li>\n                        <Link\n                            id=\"tab-button-example-01\"\n                            to=\"/icons/\"\n                            activeStyle={activeLinkStyles}\n                            role=\"tab\">\n                                Icons\n                        </Link>\n                    </li>\n                    <li>\n                        <Link\n                            id=\"tab-button-example-02\"\n                            to=\"/icons/usage/\"\n                            activeStyle={activeLinkStyles}\n                            role=\"tab\">\n                                Usage\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        \n        </Fragment>\n    );\n}\n\nexport default IconLeader;","import React, { Fragment, useState } from 'react';\n\nimport { Link } from 'gatsby';\nimport { graphql } from 'gatsby';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Seo from '../../components/Seo';\n\nimport IconLeader from '../../components/supplementary/IconLeader';\n\nconst Icons = ({ data }) => {\n    \n    const allIcons = data.allNatura11YiconsYaml.nodes;\n\n    const [hasResults, setHasResults] = useState(true);\n    const [enteredSearch, setEnteredSearch] = useState('');\n    const [displayedIcons, setDisplayedIcons] = useState(allIcons);\n\n    const searchHandler = (event) => {\n\n        setEnteredSearch(event.target.value);\n\n        const enteredSearchLowercase = event.target.value.toLowerCase();\n\n        let filteredIcons = allIcons.filter(icon => {\n            return (\n                icon.className.toLowerCase().includes(enteredSearchLowercase) ||\n                icon.tags.toString().includes(enteredSearchLowercase)\n            );\n        });\n\n        enteredSearchLowercase !== '' ? \n            setDisplayedIcons(filteredIcons) :\n            setDisplayedIcons(allIcons);\n\n        filteredIcons.length > 0 ?\n            setHasResults(true) :\n            setHasResults(false);\n\n    }\n\n    const iconList = displayedIcons.map((icon, index) => {\n\n        let name = icon.className;\n        let tags = icon.tags;\n        let svg = icon.svg\n\n        return (\n            <Link to={`/icons/${name}`} key={`${icon}_${index}`}>\n\n                <div className=\"aspect-ratio-1x1 display-flex justify-content-center align-items-center border border-radius margin-bottom-1\">                                    \n                    <svg className=\"icon\">\n                        <use href={`#${name}`}></use>\n                    </svg>\n                </div>\n        \n                <p className=\"font-size-sm opacity-70\">\n                    {name}\n                </p>\n\n            </Link>\n        );\n    })\n\n    return (\n        <Fragment>\n\n            <Seo title=\"Icons\" />\n            \n            <Header />\n\n            <IconLeader />\n\n            <div className=\"container medium\">\n\n                <div className=\"form-entry margin-y-4\">\n\n                    <div className=\"form-entry__field\">\n\n                        <span className=\"form-entry__field__input\">\n                            <span className=\"icon icon-search opacity-50\"></span>\n                            <input\n                                type=\"text\"\n                                name=\"natura11y-icon-search\"\n                                id=\"natura11y-icon-search\"\n                                placeholder=\"Filter Icons\" \n                                onChange={searchHandler}\n                            />\n                        </span>\n\n                    </div>\n\n                </div>\n\n                <div className=\"text-align-center margin-y-4\">\n\n                {hasResults ? (\n\n                    <div className=\"grid grid--column-3 grid--column-6--md gap-2\" id=\"natura11yIconGrid\">\n\n                        {iconList}\n\n                    </div>\n                    \n                ) : (\n                    \n                    <div className=\"container narrow text-align-center\">\n\n                        <p className=\"h2 code-font\" aria-hidden=\"true\">\n                            .__.<br />\n                            &#123;O,o&#125;<br />\n                            /&#41;__&#41;<br />\n                            \" \"<span style={{'opacity': '0'}}>c</span>\n                        </p>\n\n                        <p className='h6'>No icons found for '{enteredSearch}'</p>\n\n                    </div>\n\n                )}\n                \n                </div>\n\n            </div>\n\n            <Footer />\n\n        </Fragment>\n    );\n}\n\nexport default Icons;\n\nexport const query = graphql`\nquery queryIcons {\n    allNatura11YiconsYaml {\n        nodes {\n          className\n          codePoint\n          icon\n          id\n          svgCode {\n              body\n          }\n          tags\n          unicode\n        }\n      }\n    }\n`;"],"names":["Fragment","className","id","to","activeStyle","activeLinkStyles","role","allIcons","data","allNatura11YiconsYaml","nodes","useState","hasResults","setHasResults","enteredSearch","setEnteredSearch","displayedIcons","setDisplayedIcons","iconList","map","icon","index","name","tags","svg","key","href","title","type","placeholder","onChange","event","target","value","enteredSearchLowercase","toLowerCase","filteredIcons","filter","includes","toString","length","style"],"sourceRoot":""}