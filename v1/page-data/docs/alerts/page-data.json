{"componentChunkName":"component---src-templates-documentation-js","path":"/docs/alerts","result":{"data":{"allDocs":{"nodes":[{"frontmatter":{"category":"a-z","title":"Accents"},"slug":"accents","id":"cdc74016-37d0-5782-b5dd-387c7ed98390"},{"frontmatter":{"category":"introduction","title":"Accessibility"},"slug":"accessibility","id":"cf91e1fd-b1f8-56ee-91b3-dcb08fd1642d"},{"frontmatter":{"category":"a-z","title":"Accordions"},"slug":"accordions","id":"70212589-1cf9-5245-8c48-739f73a01bc2"},{"frontmatter":{"category":"a-z","title":"Alerts"},"slug":"alerts","id":"824927cb-d605-5ab3-8441-6dba4c663daa"},{"frontmatter":{"category":"a-z","title":"Articles"},"slug":"articles","id":"9400a1a6-2bb0-5b80-b113-7ded5270111a"},{"frontmatter":{"category":"a-z","title":"Aspect Ratios"},"slug":"apect-ratios","id":"9114ba52-80d8-5a09-9c88-1ae7f89b5353"},{"frontmatter":{"category":"a-z","title":"Backdrops"},"slug":"backdrops","id":"6332985e-2952-5e8e-9a85-87785dcf9548"},{"frontmatter":{"category":"a-z","title":"Borders"},"slug":"borders","id":"ae9aff74-9d02-5e20-ac6c-6148684f1d26"},{"frontmatter":{"category":"a-z","title":"Breakpoints"},"slug":"breakpoints","id":"be26710d-fa7e-51f8-b7cc-79eda0b72526"},{"frontmatter":{"category":"a-z","title":"Buttons"},"slug":"buttons","id":"a2632426-9dda-555f-8de6-041f5b562e06"},{"frontmatter":{"category":"a-z","title":"Cards"},"slug":"cards","id":"1ed2bd14-6574-5614-aaeb-d56a77e8bb54"},{"frontmatter":{"category":"a-z","title":"Collapse"},"slug":"collapse","id":"4157209d-4d06-5df9-865a-014bdfdd22ba"},{"frontmatter":{"category":"a-z","title":"Color"},"slug":"color","id":"80968e7c-3bbd-555e-a463-cd1d4b77ea3f"},{"frontmatter":{"category":"a-z","title":"Containers"},"slug":"containers","id":"2833dbdb-0097-59c5-b964-0411e63ed39c"},{"frontmatter":{"category":"introduction","title":"Customization"},"slug":"customization","id":"4f6506d1-772c-5146-8877-f27208736b58"},{"frontmatter":{"category":"a-z","title":"Display"},"slug":"display","id":"4a5f6596-e7c8-526c-9009-8c318cfbe461"},{"frontmatter":{"category":"a-z","title":"Flex"},"slug":"flex","id":"cb55e40b-cc87-5265-b4b1-6b24adb63d0c"},{"frontmatter":{"category":"a-z","title":"Forms"},"slug":"forms","id":"3b3fbdd9-dd05-54a2-8b8e-cb0b523bca0d"},{"frontmatter":{"category":"introduction","title":"Get Started"},"slug":"get-started","id":"951ab3d6-b3a3-5c46-9f22-6172fc8f7e09"},{"frontmatter":{"category":"a-z","title":"Grids"},"slug":"grids","id":"1d388063-2de5-58dc-aa1b-a8a7614dee3e"},{"frontmatter":{"category":"a-z","title":"Modal"},"slug":"modal","id":"f26d432e-f12d-5834-8f14-34c43dcddb2e"},{"frontmatter":{"category":"a-z","title":"Navigation"},"slug":"navigation","id":"573eeb85-bdcc-55f8-8d8d-79d471383360"},{"frontmatter":{"category":"a-z","title":"Opacities"},"slug":"opacities","id":"05cddda0-c669-5dd3-9e35-d89c29ee160b"},{"frontmatter":{"category":"a-z","title":"Overflow"},"slug":"overflow","id":"f6011e59-56c3-5892-8717-bb5dfa0d61f1"},{"frontmatter":{"category":"a-z","title":"Position"},"slug":"position","id":"da834fc6-b5be-56ee-9b0e-7dba096fbd51"},{"frontmatter":{"category":"introduction","title":"RTL"},"slug":"rtl","id":"e5127afe-29f3-5068-92d6-12d09d36ab49"},{"frontmatter":{"category":"a-z","title":"Shadows"},"slug":"shadows","id":"e4094f28-e460-5f11-8544-4f9e2a75804d"},{"frontmatter":{"category":"a-z","title":"Sizing"},"slug":"sizing","id":"a949c067-829a-5be3-8057-37b4e31b491d"},{"frontmatter":{"category":"a-z","title":"Spacing"},"slug":"spacing","id":"0b3b3158-9884-57a8-a5c4-5ae5971ee344"},{"frontmatter":{"category":"a-z","title":"Tables"},"slug":"tables","id":"f7a2ecf4-483e-5f3b-80e4-4f69303916d1"},{"frontmatter":{"category":"a-z","title":"Tabs"},"slug":"tabs","id":"96f2e4c3-dce3-5f48-8e18-d7a83621bc6c"},{"frontmatter":{"category":"a-z","title":"Typography"},"slug":"typography","id":"b042c22c-4d2b-525d-ab1a-5b16a23def19"},{"frontmatter":{"category":"supplemental","title":"Using the Icons"},"slug":"icons-usage","id":"2a198bb2-73ac-51ad-831c-ebd64080fff8"},{"frontmatter":{"category":"a-z","title":"Z index"},"slug":"z-index","id":"aca960a4-66b6-5fd3-8ef9-b4886a04a485"}]},"singleDoc":{"slug":"alerts","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"category\": \"a-z\",\n  \"title\": \"Alerts\",\n  \"bannerCreditName\": \"Zdeněk Macháček\",\n  \"bannerCreditHandle\": \"https://unsplash.com/@zmachacek\",\n  \"bannerImage\": \"../../images/banner/alerts.jpg\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TextBlock = makeShortcode(\"TextBlock\");\nvar AccessibilitySpotlight = makeShortcode(\"AccessibilitySpotlight\");\nvar Divider = makeShortcode(\"Divider\");\nvar FigureBlock = makeShortcode(\"FigureBlock\");\nvar TableLineDescBlock = makeShortcode(\"TableLineDescBlock\");\nvar TableLineDescRow = makeShortcode(\"TableLineDescRow\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(TextBlock, {\n    mdxType: \"TextBlock\"\n  }, mdx(\"p\", null, \"Alerts help draw attention to brief confirmation or warning messages\\u2014or any other important information\\u2014that shouldn't be overlooked while your visitor scans the page.\")), mdx(AccessibilitySpotlight, {\n    mdxType: \"AccessibilitySpotlight\"\n  }, mdx(\"p\", null, \"When modifying alert colors, be sure to check that your colors meet a sufficient \", mdx(\"a\", {\n    href: \"https://webaim.org/resources/contrastchecker/\",\n    target: \"_blank\"\n  }, \"contrast ratio\"), \".\"), mdx(\"p\", null, \"Never rely on color alone to convey meaning. Include a visual icon in alerts for those who experience colors differently.\"), mdx(\"p\", null, \"Include an appropriate \", mdx(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/alert_role\",\n    target: \"_blank\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alert role\")), \" for assistive technology.\")), mdx(Divider, {\n    id: \"confirm-and-warn\",\n    mdxType: \"Divider\"\n  }), mdx(TextBlock, {\n    mdxType: \"TextBlock\"\n  }, mdx(\"h2\", null, \"Confirm and Warn\"), mdx(\"p\", null, \"The Natura11y provides two types of alerts: \", mdx(\"strong\", null, \"Confirm\"), \" implied with \", mdx(\"em\", null, \"green\"), \", and \", mdx(\"strong\", null, \"Warn\"), \" implied with \", mdx(\"em\", null, \"red\"), \".\"), mdx(\"p\", null, \"Every instance of an alert should include an icon to help convey meaning. Across the Framework \", mdx(\"a\", {\n    href: \"/icons/\"\n  }, \"Natura11y Icons\"), \", our open-source icon library, is used for all icons.\")), mdx(FigureBlock, {\n    figureNumber: \"1\",\n    visualExample: mdx(AlertExample, {\n      mdxType: \"AlertExample\"\n    }),\n    highlightedLines: \"2-5,7-12,14-18\",\n    codeExample: \"\\n        <div\\n            class=\\\"alert alert--confirm\\\"\\n            aria-labelledby=\\\"alert-label\\\"\\n            aria-describedby=\\\"alert-description\\\"\\n            role=\\\"alert\\\"> \\n\\n            <div class=\\\"alert__title h5\\\">\\n                <span class=\\\"icon icon-confirm\\\" aria-hidden=\\\"true\\\"></span>\\n                <span class=\\\"alert__title__text\\\" id=\\\"alert-label\\\">\\n                    Alert Confirm\\n                </span>\\n            </div> \\n\\n            <div class=\\\"alert__description\\\" id=\\\"alert-description\\\">\\n                <p>\\n                    Thank you for your feedback. A confirmation message has been sent to your email. Return to our <a href=\\\"#1\\\">homepage</a>.\\n                </p>\\n            </div> \\n\\n        </div>\\n    \",\n    mdxType: \"FigureBlock\"\n  }), mdx(TableLineDescBlock, {\n    targetFigure: \"1\",\n    mdxType: \"TableLineDescBlock\"\n  }, mdx(TableLineDescRow, {\n    lines: \"2-5\",\n    mdxType: \"TableLineDescRow\"\n  }, mdx(\"p\", null, \"The parent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert\"), \" selector is required.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert--{x}\"), \" is the modifier class that provides the alert's color, where \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"x\"), \" equals \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"confirm\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"attention\"), \", or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"warn\"), \". \"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-labelledby\"), \" attribute equals the alert title's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" attribute.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-describedby\"), \" attribute equals the alert description's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" attribute.\"), mdx(\"p\", null, \"Include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"role=\\\"alert\\\"\"), \" if the alert includes urgent information.\")), mdx(TableLineDescRow, {\n    lines: \"7-12\",\n    mdxType: \"TableLineDescRow\"\n  }, mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert__title\"), \" selector is required. \"), mdx(\"p\", null, \"It holds the alert's title and visual icon.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert__title__text\"), \" selector holds the alert title's text. It is required. It\\nincludes the unique \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" targeted by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-labelledby\"), \" attribute\\npresent on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert\"), \" selector.\")), mdx(TableLineDescRow, {\n    lines: \"14-18\",\n    mdxType: \"TableLineDescRow\"\n  }, mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert__description\"), \" selector is not required.\"), mdx(\"p\", null, \"It holds the alert's description message. It includes the unique \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" targeted by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-describedby\"), \" attribute present on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert\"), \" selector.\"), mdx(\"p\", null, \"All links (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a>\"), \" tags) within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<p>\"), \" tags, will automatically inherit the alert's text color.\"))), mdx(TextBlock, {\n    mdxType: \"TextBlock\"\n  }, mdx(\"h3\", null, \"Inverse Color Modifier\"), mdx(\"p\", null, \"For a bolder look, chain \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--inverse\"), \" to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alert--confirm\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alert--warn\"), \" modifier classes respectively.\")), mdx(FigureBlock, {\n    figureNumber: \"2\",\n    language: \"html\",\n    visualExample: mdx(AlertExample, {\n      inverse: true,\n      mdxType: \"AlertExample\"\n    }),\n    highlightedLines: \"1,5\",\n    codeExample: \"\\n        <div class=\\\"alert alert--confirm--inverse\\\">\\n            ...\\n        </div> \\n\\n        <div class=\\\"alert alert--warn--inverse\\\">\\n            ...\\n        </div>\\n    \",\n    mdxType: \"FigureBlock\"\n  }), mdx(TextBlock, {\n    mdxType: \"TextBlock\"\n  }, mdx(\"h3\", null, \"Title Only Alert\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert__description\"), \" is not required. Leaving it out creates a title only alert.\")), mdx(FigureBlock, {\n    figureNumber: \"3\",\n    language: \"html\",\n    visualExample: mdx(AlertExample, {\n      inverse: true,\n      description: false,\n      mdxType: \"AlertExample\"\n    }),\n    codeExample: \"\\n        <div\\n            class=\\\"alert alert--confirm--inverse margin-y-3\\\"\\n            aria-labelledby=\\\"alert-title-only-label\\\"> \\n\\n            <div class=\\\"alert__title h5\\\">\\n                <span class=\\\"icon icon-confirm\\\" aria-hidden=\\\"true\\\"></span>\\n                <span class=\\\"alert__title__text\\\" id=\\\"alert-title-only-label\\\">\\n                    Alert Confirm\\n                </span>\\n            </div> \\n\\n        </div>\\n    \",\n    mdxType: \"FigureBlock\"\n  }), mdx(Divider, {\n    id: \"dismissable-alerts\",\n    mdxType: \"Divider\"\n  }), mdx(TextBlock, {\n    mdxType: \"TextBlock\"\n  }, mdx(\"h2\", null, \"Dismissable Alerts\"), mdx(\"p\", null, \"For dismissable alerts, add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert--dismissable\"), \" modifier class. Doing so automatically places a close button inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert\"), \".\"), mdx(\"p\", null, \"When the close button is pressed, the alert fades out, then the entire \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert\"), \" selector is removed\\nfrom the DOM.\")), mdx(FigureBlock, {\n    figureNumber: \"4\",\n    language: \"html\",\n    visualExample: mdx(AlertExample, {\n      dismissable: true,\n      mdxType: \"AlertExample\"\n    }),\n    codeExample: \"\\n        <div class=\\\"alert alert--confirm alert--dismissable\\\">\\n            ...\\n        </div>\\n    \",\n    mdxType: \"FigureBlock\"\n  }), mdx(Divider, {\n    id: \"more-style-variations\",\n    mdxType: \"Divider\"\n  }), mdx(TextBlock, {\n    mdxType: \"TextBlock\"\n  }, mdx(\"h2\", null, \"More Style Variations\"), mdx(\"p\", null, \"Looking for even more alert styles? Exclude the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert--confirm\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".alert--warn\"), \"\\nmodifier classes. Instead, add the color utilities or border utilities for different accents and style\\nvariations.\")), mdx(FigureBlock, {\n    figureNumber: \"5\",\n    language: \"html\",\n    visualExample: mdx(StyleVariations, {\n      mdxType: \"StyleVariations\"\n    }),\n    codeExample: \"\\n        <div class=\\\"alert text-color-link border-left\\\" role=\\\"alert\\\"> \\n\\n            <div class=\\\"alert__title h5\\\">\\n                <span class=\\\"icon icon-warn\\\" aria-hidden=\\\"true\\\"></span>\\n                <span class=\\\"alert__title__text\\\" id=\\\"alert-07-label\\\">\\n                    Alert Title\\n                </span>\\n            </div> \\n\\n            <div class=\\\"alert__description\\\" id=\\\"alert-07-desc\\\">\\n                <p>\\n                    You have <strong>4</strong> unread messages waiting in <a href=\\\"#1\\\">your account dashboard</a>.\\n                </p>\\n            </div> \\n\\n        </div> \\n\\n        <div class=\\\"alert theme-dark border-radius text-align-center\\\" role=\\\"alert\\\"> \\n\\n            <div class=\\\"alert__title h5 text-color-secondary\\\">\\n                <span class=\\\"icon icon-warn\\\" aria-hidden=\\\"true\\\"></span>\\n                <span class=\\\"alert__title__text\\\" id=\\\"alert-06-label\\\">\\n                    Alert Title\\n                </span>\\n            </div> \\n\\n            <div class=\\\"alert__description\\\" id=\\\"alert-06-desc\\\">\\n                <p>\\n                    You have <strong>4</strong> unread messages waiting in <a href=\\\"#1\\\">your account dashboard</a>.\\n                </p>\\n            </div> \\n\\n        </div>\\n    \",\n    mdxType: \"FigureBlock\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Alerts","bannerCreditName":"Zdeněk Macháček","bannerCreditHandle":"https://unsplash.com/@zmachacek","bannerImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181808","images":{"fallback":{"src":"/v1/static/2a285fffb24e8821d783e52f9f727345/6a9ae/alerts.jpg","srcSet":"/v1/static/2a285fffb24e8821d783e52f9f727345/b6b6d/alerts.jpg 500w,\n/v1/static/2a285fffb24e8821d783e52f9f727345/86b00/alerts.jpg 1000w,\n/v1/static/2a285fffb24e8821d783e52f9f727345/6a9ae/alerts.jpg 2000w","sizes":"(min-width: 2000px) 2000px, 100vw"},"sources":[{"srcSet":"/v1/static/2a285fffb24e8821d783e52f9f727345/adc72/alerts.webp 500w,\n/v1/static/2a285fffb24e8821d783e52f9f727345/e05de/alerts.webp 1000w,\n/v1/static/2a285fffb24e8821d783e52f9f727345/0353e/alerts.webp 2000w","type":"image/webp","sizes":"(min-width: 2000px) 2000px, 100vw"}]},"width":2000,"height":750}}}}},"relatedCPs":{"nodes":[{"customProperties":[{"name":"alert-padding-x","value":"var(--spacer-2)","description":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Left and right padding of the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alert\"), \" component header and body\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},{"name":"alert-padding-y","value":"var(--spacer-2)","description":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Top and bottom padding of the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alert\"), \" component header and body\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}],"type":"Alerts","scope":".alert"}]}},"pageContext":{"slug":"alerts","title":"Alerts"}},"staticQueryHashes":["1129062873","28479125","772789909","903098576"]}